{"version":3,"sources":["images/not-found.jpg","images/logo.svg","components/elements/TextFilters.js","components/elements/Navbar.js","components/elements/ButtonInfo.js","components/elements/CheckBoxFilters.js","components/elements/Filters.js","components/elements/Jumbotron.js","components/elements/Spinner.js","components/elements/LoadMoreBtn.js","components/elements/FavButton.js","components/elements/ButtonStatus.js","components/elements/OptInForm.js","components/elements/SlideIn.js","components/elements/Card.js","components/pages/BrowseTrials.js","others/configuration.js","components/pages/BrowseFavourites.js","components/App.js","others/serviceWorker.js","index.js"],"names":["module","exports","TextFilters","state","value","timeout","doSearch","event","setState","target","clearTimeout","setTimeout","props","handleChange","className","id","this","type","placeholder","onChange","autocomplete","class","React","Component","Navbar","handleConditionSuggestions","favCount","handleConditionSearch","baseline","to","src","require","alt","data-toggle","data-target","ButtonInfo","content","Tooltip","title","arrow","CheckRecruiting","checked","toggleSwitch","handleClick","disabled","loading","htmlFor","name","tooltip","Filters","handleStudySearch","handleLocationSearch","handleRecruitingClick","handleTypeClick","handleVolunteersClick","handleGenderClick","handleAgeGroupClick","onPopState","key","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","CheckBoxFilters","onClick","window","location","reload","openFilter","document","getElementById","click","addEventListener","closeFilter","history","pushState","filter","removeEventListener","Jumbotron","studiesFound","toLocaleString","handleCloseFilters","Spinner","LoadMoreBtn","FavButton","favourite","NCTId","JSON","parse","localStorage","getItem","includes","ButtonStatus","status","OptInForm","required","rows","recipientList","map","item","index","SlideIn","study","ProtocolSection","IdentificationModule","lastUpdate","StatusModule","LastUpdateSubmitDate","protocolTitle","OfficialTitle","briefSummary","DescriptionModule","BriefSummary","primaryPurpose","DesignModule","DesignInfo","DesignPrimaryPurpose","studyType","StudyType","interventionDetails","ArmsInterventionsModule","InterventionList","Intervention","phase","PhaseList","Phase","biospec","BioSpec","BioSpecDescription","conditions","ConditionsModule","ConditionList","Condition","enrollmentCount","EnrollmentInfo","EnrollmentCount","locations","ContactsLocationsModule","LocationList","Location","OverallStatus","healthyVolunteer","EligibilityModule","HealthyVolunteers","gender","Gender","minAge","MinimumAge","maxAge","MaximumAge","criteria","EligibilityCriteria","split","CentralContactList","CentralContact","forEach","CentralContactRole","push","CentralContactName","CentralContactEMail","LocationContactList","LocationContact","LocationContactRole","LocationContactName","LocationContactEMail","intervention","InterventionName","InterventionDescription","length","condition","LocationFacility","LocationCountry","toLowerCase","colSpan","toUpperCase","replace","Card","slice","closeSlideIn","slideIn","href","fav","indexOf","setItem","stringify","splice","App","min_rnk","max_rnk","ConditionSearch","LocationSearch","StdAge","trials","fetchItems","api_url","a","fetch","json","result","FullStudiesResponse","NStudiesFound","FullStudies","console","log","searchTerm","then","res","alert","apiGenerator","getOverallStatus","recruitingStatus","notRecruitingStatus","join","overallStatus","getStudyType","interventionalType","observationalType","getHealthyVolunteers","volunteersYes","volunteersNo","healthyVolunteers","getGenders","genderMale","genderFemale","getAgeGroups","ageChild","ageAdult","ageOldAdult","ageGroup","loadMoreItems","expr","substr","base_api","ContainerClassName","TransitionClassName","undefined","trial","Study","i","BrowseFavourites","NCTIds","exact","path","component","BrowseTrials","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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CA,6BACE,4CACgB,IACd,kBAAC,EAAD,CACEkB,QACE,sGAED,IANL,KASA,kBAAC,EAAD,CACEvB,aAAcsC,EACdlC,KAAM,OACNF,GAAI,kBACJG,YAAa,MAGjB,6BACA,6BACE,mDACA,kBAAC+C,EAAD,CACEpB,QAASA,EACTF,YAAaS,EACbrC,GAAI,oBACJgC,KAAM,eAER,kBAACkB,EAAD,CACEpB,QAASA,EACTF,YAAaS,EACbrC,GAAI,wBACJgC,KAAM,oBAGV,6BACA,6BACE,2CACA,kBAACkB,EAAD,CACEpB,QAASA,EACTF,YAAaU,EACbtC,GAAI,sBACJgC,KAAM,iBACNC,QACE,wPAGJ,kBAACiB,EAAD,CACEpB,QAASA,EACTF,YAAaU,EACbtC,GAAI,qBACJgC,KAAM,gBACNC,QACE,yMAIN,6BACA,6BACE,2DACA,kBAACiB,EAAD,CACEpB,QAASA,EACTF,YAAaW,EACbvC,GAAI,yBACJgC,KAAM,QAER,kBAACkB,EAAD,CACEpB,QAASA,EACTF,YAAaW,EACbvC,GAAI,wBACJgC,KAAM,QAGV,6BACA,6BACE,uCACA,kBAACkB,EAAD,CACEpB,QAASA,EACTF,YAAaY,EACbxC,GAAI,cACJgC,KAAM,cAER,kBAACkB,EAAD,CACEpB,QAASA,EACTF,YAAaY,EACbxC,GAAI,gBACJgC,KAAM,iBAGV,6BACA,6BACE,2CACA,kBAACkB,EAAD,CACEpB,QAASA,EACTF,YAAaa,EACbzC,GAAI,YACJgC,KAAM,qBAER,kBAACkB,EAAD,CACEpB,QAASA,EACTF,YAAaa,EACbzC,GAAI,YACJgC,KAAM,kBAER,kBAACkB,EAAD,CACEpB,QAASA,EACTF,YAAaa,EACbzC,GAAI,gBACJgC,KAAM,uBAGV,6BACA,6BACE,wCACA,2BACE9B,KAAK,OACLH,UAAU,eACVV,MAAM,YACNwC,UAAQ,OAKhB,yBAAK9B,UAAU,gBACb,4BACEG,KAAK,SACLH,UAAU,oBACViD,eAAa,QACbhD,GAAG,gBACHmD,QAAST,GALX,SASA,4BACExC,KAAK,SACLiD,QAAS,kBAAMC,OAAOC,SAASC,UA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","file":"static/js/main.c936058f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/not-found.3f46d8aa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.2515bf7d.svg\";","import React from \"react\";\r\n\r\nclass TextFilters extends React.Component {\r\n  state = {\r\n    value: \"\",\r\n  };\r\n\r\n  timeout = null;\r\n\r\n  doSearch = (event) => {\r\n    this.setState({\r\n      value: event.target.value,\r\n    });\r\n    clearTimeout(this.timeout);\r\n\r\n    this.timeout = setTimeout(() => {\r\n      this.props.handleChange(this.state.value);\r\n    }, 750);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"input-group col-md-4\">\r\n        <input\r\n          className=\"form-control border-right-0\"\r\n          id={this.props.id}\r\n          type={this.props.type}\r\n          placeholder={this.props.placeholder}\r\n          onChange={this.doSearch}\r\n          value={this.state.value}\r\n          autocomplete=\"off\"\r\n        />\r\n        <div class=\"input-group-prepend\">\r\n          <span class=\"input-group-text\" id=\"validationTooltipUsernamePrepend\">\r\n            <i className=\"fa fa-search\"></i>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextFilters;\r\n","import React from \"react\";\r\nimport TextFilters from \"./TextFilters.js\";\r\nimport { HashRouter, Link } from \"react-router-dom\";\r\n\r\nconst Navbar = ({ handleConditionSuggestions, handleConditionSearch, favCount }) => {\r\n  return (\r\n    <div className=\"navigation-area\">\r\n      <nav className=\"navbar navbar-expand-md col-xs-12 container\">\r\n        <div>\r\n          <HashRouter baseline=\"/\">\r\n            <Link to=\"/\">\r\n              <div className=\"navbar-brand\">\r\n                <img src={require(`../../images/logo.svg`)} alt=\"logo\" />\r\n                <h4>TrialGate</h4>\r\n              </div>\r\n            </Link>\r\n          </HashRouter>\r\n        </div>\r\n\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#collapsibleNavbar\"\r\n        >\r\n          <span className=\"font-weight-light\">MENU</span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse \" id=\"collapsibleNavbar\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <HashRouter baseline=\"/\">\r\n                <Link to=\"/\">\r\n                  <span className=\"nav-link text-center\">\r\n                    Browse All Trials\r\n                  </span>\r\n                </Link>\r\n              </HashRouter>\r\n            </li>\r\n\r\n            <li className=\"nav-item text-center\">\r\n              <HashRouter baseline=\"/\">\r\n                <Link to=\"/favourites\">\r\n                  <span className=\"nav-link\">\r\n                    My Favourites {favCount > 0 && <span> ({favCount})</span>}\r\n                  </span>\r\n                </Link>\r\n              </HashRouter>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <TextFilters\r\n          handleChange={handleConditionSuggestions}\r\n          placeholder={\"Search Condition (e.g. COVID)\"}\r\n          type={'text'}\r\n          id={'search-condition'}\r\n        />\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst ButtonInfo = ({ content }) => {\r\n  return (\r\n    <Tooltip title={content} arrow>\r\n      <i className=\"fa fa-info-circle\"></i>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default ButtonInfo;\r\n","import React from \"react\";\r\nimport ButtonInfo from \"./ButtonInfo.js\";\r\n\r\nclass CheckRecruiting extends React.Component {\r\n  state = {\r\n    checked: false,\r\n  };\r\n\r\n  timeout = null;\r\n\r\n  toggleSwitch = () => {\r\n    this.setState({\r\n      checked: !this.state.checked,\r\n    });\r\n    clearTimeout(this.timeout);\r\n\r\n    this.timeout = setTimeout(() => {\r\n      this.props.handleClick(this.state.checked);\r\n    }, 100);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-check form-check-inline\">\r\n        <input\r\n          onChange={this.toggleSwitch}\r\n          className=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          id={this.props.id}\r\n          value=\"\"\r\n          checked={this.state.checked}\r\n          disabled={this.props.loading && true}\r\n        />\r\n        <label\r\n        className=\"form-check-label\"\r\n        htmlFor={this.props.id}\r\n        >\r\n          {this.props.name}{\" \"}\r\n          {this.props.tooltip && <ButtonInfo content={this.props.tooltip} />}{\" \"}\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CheckRecruiting;\r\n","import React from \"react\";\r\nimport ButtonInfo from \"./ButtonInfo.js\";\r\nimport CheckBoxFilters from \"./CheckBoxFilters\";\r\nimport TextFilters from \"./TextFilters.js\";\r\n\r\nconst Filters = ({\r\n  loading,\r\n  handleStudySearch,\r\n  handleLocationSearch,\r\n  handleRecruitingClick,\r\n  handleTypeClick,\r\n  handleVolunteersClick,\r\n  handleGenderClick,\r\n  handleAgeGroupClick,\r\n  onPopState,\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"modal fade\"\r\n      key=\"filters\"\r\n      id=\"filters\"\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"filters\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog modal-dialog-slideout\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">Filters</h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">×</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <form className=\"\">\r\n              <div>\r\n                <h6>\r\n                  Study Name{\" \"}\r\n                  <ButtonInfo\r\n                    content={\r\n                      \"Narrow down your search by providing part of the study name or protocol title.\"\r\n                    }\r\n                  />{\" \"}\r\n                  :\r\n                </h6>\r\n                <TextFilters\r\n                  handleChange={handleStudySearch}\r\n                  type={\"text\"}\r\n                  id={\"search-study\"}\r\n                  placeholder={\"\"}\r\n                />\r\n              </div>\r\n              <br />\r\n              <div>\r\n                <h6>\r\n                  Location Name{\" \"}\r\n                  <ButtonInfo\r\n                    content={\r\n                      \"Narrow down your search by providing desired location of study (e.g. Singapore General Hospital).\"\r\n                    }\r\n                  />{\" \"}\r\n                  :\r\n                </h6>\r\n                <TextFilters\r\n                  handleChange={handleLocationSearch}\r\n                  type={\"text\"}\r\n                  id={\"search-location\"}\r\n                  placeholder={\"\"}\r\n                />\r\n              </div>\r\n              <br />\r\n              <div>\r\n                <h6>Recruitment Status:</h6>\r\n                <CheckBoxFilters\r\n                  loading={loading}\r\n                  handleClick={handleRecruitingClick}\r\n                  id={\"status-recruiting\"}\r\n                  name={\"Recruiting\"}\r\n                />\r\n                <CheckBoxFilters\r\n                  loading={loading}\r\n                  handleClick={handleRecruitingClick}\r\n                  id={\"status-not-recruiting\"}\r\n                  name={\"Not Recruiting\"}\r\n                />\r\n              </div>\r\n              <br />\r\n              <div>\r\n                <h6>Study Type:</h6>\r\n                <CheckBoxFilters\r\n                  loading={loading}\r\n                  handleClick={handleTypeClick}\r\n                  id={\"type-interventional\"}\r\n                  name={\"Interventional\"}\r\n                  tooltip={\r\n                    \"Also known as clinical trials. Participants are assigned to groups that receive one or more intervention/treatment (or no intervention) so that researchers can evaluate the effects of the interventions on biomedical or health-related outcomes.\"\r\n                  }\r\n                />\r\n                <CheckBoxFilters\r\n                  loading={loading}\r\n                  handleClick={handleTypeClick}\r\n                  id={\"type-observational\"}\r\n                  name={\"Observational\"}\r\n                  tooltip={\r\n                    \"A type of clinical study in which participants are identified as belonging to study groups and are assessed for biomedical or health outcomes. A patient registry is a kind of observational study.\"\r\n                  }\r\n                />\r\n              </div>\r\n              <br />\r\n              <div>\r\n                <h6>Accepts Healthy Volunteers:</h6>\r\n                <CheckBoxFilters\r\n                  loading={loading}\r\n                  handleClick={handleVolunteersClick}\r\n                  id={\"healthy-volunteers-yes\"}\r\n                  name={\"Yes\"}\r\n                />\r\n                <CheckBoxFilters\r\n                  loading={loading}\r\n                  handleClick={handleVolunteersClick}\r\n                  id={\"healthy-volunteers-no\"}\r\n                  name={\"No\"}\r\n                />\r\n              </div>\r\n              <br />\r\n              <div>\r\n                <h6>Gender:</h6>\r\n                <CheckBoxFilters\r\n                  loading={loading}\r\n                  handleClick={handleGenderClick}\r\n                  id={\"gender-male\"}\r\n                  name={\"Male Only\"}\r\n                />\r\n                <CheckBoxFilters\r\n                  loading={loading}\r\n                  handleClick={handleGenderClick}\r\n                  id={\"gender-female\"}\r\n                  name={\"Female Only\"}\r\n                />\r\n              </div>\r\n              <br />\r\n              <div>\r\n                <h6>Age Groups:</h6>\r\n                <CheckBoxFilters\r\n                  loading={loading}\r\n                  handleClick={handleAgeGroupClick}\r\n                  id={\"age-child\"}\r\n                  name={\"Child (Birth-17)\"}\r\n                />\r\n                <CheckBoxFilters\r\n                  loading={loading}\r\n                  handleClick={handleAgeGroupClick}\r\n                  id={\"age-adult\"}\r\n                  name={\"Adult (18-64)\"}\r\n                />\r\n                <CheckBoxFilters\r\n                  loading={loading}\r\n                  handleClick={handleAgeGroupClick}\r\n                  id={\"age-old-adult\"}\r\n                  name={\"Older Adult (65+)\"}\r\n                />\r\n              </div>\r\n              <br />\r\n              <div>\r\n                <h6>Country:</h6>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value=\"Singapore\"\r\n                  disabled\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-dismiss=\"modal\"\r\n              id=\"close-filters\"\r\n              onClick={onPopState}\r\n            >\r\n              Close\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => window.location.reload()}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              Clear Filters\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Filters from \"./Filters.js\";\r\n\r\nconst openFilter = () => {\r\n  document.getElementById(\"filters\").click();\r\n  window.addEventListener(\"popstate\", closeFilter, false);\r\n  window.history.pushState({ filter: \"open\" }, \"\"); // write twice for it to work\r\n  window.history.pushState({ filter: \"open\" }, \"\");\r\n};\r\nconst closeFilter = (event) => {\r\n  if (event.state && event.state.filter === \"open\") {\r\n    document.getElementById(\"close-filters\").click();\r\n    window.removeEventListener(\"popstate\", closeFilter, false);\r\n  }\r\n};\r\n\r\nconst Jumbotron = ({\r\n  studiesFound,\r\n  loading,\r\n  handleStudySearch,\r\n  handleLocationSearch,\r\n  handleRecruitingClick,\r\n  handleTypeClick,\r\n  handleVolunteersClick,\r\n  handleGenderClick,\r\n  handleAgeGroupClick,\r\n}) => {\r\n  return (\r\n    <div className=\"jumbotron jumbotron-fluid\">\r\n      <div className=\"container\">\r\n        <div className=\"breadcrumbs\">\r\n          {loading\r\n            ? \"Connecting to ClinicalTrials.gov database...\"\r\n            : \"Data Sourced from ClinicalTrials.gov\"}\r\n        </div>\r\n        <h1 className=\"title\">\r\n          {loading\r\n            ? \"Searching for Studies...\"\r\n            : `${studiesFound.toLocaleString()} ${\r\n                studiesFound > 1 ? \"Studies\" : \"Study\"\r\n              } Found`}\r\n        </h1>\r\n        <div>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            type=\"button\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#filters\"\r\n            onClick={openFilter}\r\n          >\r\n            <i className=\"fa fa-filter\"></i> Filters\r\n          </button>\r\n        </div>\r\n        <Filters\r\n          loading={loading}\r\n          handleStudySearch={handleStudySearch}\r\n          handleLocationSearch={handleLocationSearch}\r\n          handleRecruitingClick={handleRecruitingClick}\r\n          handleTypeClick={handleTypeClick}\r\n          handleVolunteersClick={handleVolunteersClick}\r\n          handleGenderClick={handleGenderClick}\r\n          handleAgeGroupClick={handleAgeGroupClick}\r\n          handleCloseFilters={openFilter}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nJumbotron.propTypes = {\r\n  studiesFound: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Jumbotron;\r\n","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loader\"></div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React from \"react\";\r\n\r\nconst LoadMoreBtn = ({ handleClick }) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col text-center\">\r\n        <button onClick={handleClick} className=\"btn btn-primary mt-4 mb-5\">\r\n          Fetch More Records\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadMoreBtn;\r\n","import React from 'react';\r\n\r\nclass FavButton extends React.Component {\r\n    state = {\r\n        favourite: false\r\n    }\r\n\r\n    timeout = null;\r\n\r\n    toggleSwitch = () => {\r\n        this.setState({\r\n            favourite: !this.state.favourite\r\n        })\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout(() => {\r\n            this.props.handleClick(this.state.favourite, this.props.NCTId);\r\n         }, 200);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let fav = JSON.parse(localStorage.getItem('favourite')) || [];\r\n        if (fav.includes(this.props.NCTId)) {\r\n            this.setState({\r\n                favourite: true\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                favourite: false\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span className={`button-favourite ${this.state.favourite && `favourited`}`} onClick={this.toggleSwitch} id={`fav-${this.props.NCTId}`}>\r\n                <i className=\"fa fa-heart\"></i> {this.state.favourite ? ' Favourited' : ' Add to Favourite'}\r\n            </span>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default FavButton;","import React from 'react';\r\n\r\nconst ButtonStatus = ({ status }) => {\r\n    return <span className={`status-badge ${status === 'Recruiting' ? 'status-active' : status === 'Completed' ? 'status-completed' : 'status-inactive'}`}>{status}</span>\r\n}\r\n\r\nexport default ButtonStatus;","import React from \"react\";\r\n\r\nclass OptInForm extends React.Component {\r\n  state = {\r\n    checked: false,\r\n  };\r\n\r\n  timeout = null;\r\n\r\n  toggleSwitch = () => {\r\n    this.setState({\r\n      checked: !this.state.checked,\r\n    });\r\n    clearTimeout(this.timeout);\r\n    document.getElementById(`opt-in-${this.props.NCTId}`).disabled = true;\r\n\r\n    this.timeout = setTimeout(() => {\r\n      document.getElementById(`opt-in-${this.props.NCTId}`).disabled = false;\r\n    }, 250);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"border p-3\">\r\n        <div className=\"form-check\">\r\n          <input\r\n            onChange={this.toggleSwitch}\r\n            type=\"checkbox\"\r\n            className=\"form-check-input\"\r\n            value=\"\"\r\n            id={`opt-in-${this.props.NCTId}`}\r\n            data-toggle=\"collapse\"\r\n            data-target={`#form-${this.props.NCTId}`}\r\n          />\r\n          <label\r\n            htmlFor={`opt-in-${this.props.NCTId}`}\r\n            className=\"form-check-label\"\r\n          >\r\n            I have read the information above and acknowledge that I fulfill all\r\n            eligibility criteria to the best of my knowledge. I agree to be\r\n            contacted by the study team for further screening and participation\r\n            in this study.\r\n          </label>\r\n        </div>\r\n        <div id={`form-${this.props.NCTId}`} className=\"collapse text-center\">\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            className=\"form-control form-control mt-3\"\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n          />\r\n          <input\r\n            required\r\n            type=\"email\"\r\n            className=\"form-control form-control mt-3\"\r\n            placeholder=\"Email\"\r\n            name=\"email\"\r\n          />\r\n          <input\r\n            required\r\n            type=\"tel\"\r\n            className=\"form-control form-control mt-3\"\r\n            placeholder=\"Contact No.\"\r\n            name=\"contactNo\"\r\n          />\r\n          <textarea\r\n            className=\"form-control\"\r\n            placeholder=\"Remarks\"\r\n            rows=\"3\"\r\n          ></textarea>\r\n          <hr />\r\n          {this.props.recipientList.map((item, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <h6 className=\"font-weight-bold text-left\">\r\n                  Recipient {index + 1}:\r\n                </h6>\r\n                <div className=\"input-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={item[0]}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"input-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={item[1]}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <br />\r\n              </div>\r\n            );\r\n          })}\r\n          <button type=\"button\" className=\"btn btn-primary\">\r\n            Send to Study Team\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OptInForm;\r\n","import React from \"react\";\r\nimport ButtonStatus from \"./ButtonStatus.js\";\r\nimport ButtonInfo from \"./ButtonInfo.js\";\r\nimport OptInForm from \"./OptInForm.js\";\r\n\r\nconst SlideIn = ({ study }) => {\r\n  const NCTId = study.ProtocolSection.IdentificationModule.NCTId;\r\n  const lastUpdate = study.ProtocolSection.StatusModule.LastUpdateSubmitDate;\r\n  const protocolTitle =\r\n    study.ProtocolSection.IdentificationModule.OfficialTitle;\r\n  const briefSummary = study.ProtocolSection.DescriptionModule.BriefSummary;\r\n  const primaryPurpose =\r\n    \"DesignInfo\" in study.ProtocolSection.DesignModule &&\r\n    \"DesignPrimaryPurpose\" in study.ProtocolSection.DesignModule.DesignInfo\r\n      ? study.ProtocolSection.DesignModule.DesignInfo.DesignPrimaryPurpose\r\n      : \"No Data\";\r\n  const studyType = study.ProtocolSection.DesignModule.StudyType;\r\n  const interventionDetails =\r\n    studyType === \"Interventional\"\r\n      ? study.ProtocolSection.ArmsInterventionsModule.InterventionList\r\n          .Intervention\r\n      : \"Not Applicable\";\r\n  const phase =\r\n    studyType === \"Interventional\"\r\n      ? study.ProtocolSection.DesignModule.PhaseList.Phase\r\n      : \"Not Applicable\";\r\n  const biospec =\r\n    \"BioSpec\" in study.ProtocolSection.DesignModule\r\n      ? study.ProtocolSection.DesignModule.BioSpec.BioSpecDescription\r\n      : \"Not Applicable\";\r\n  const conditions =\r\n    study.ProtocolSection.ConditionsModule.ConditionList.Condition;\r\n  const enrollmentCount =\r\n    \"EnrollmentInfo\" in study.ProtocolSection.DesignModule\r\n      ? study.ProtocolSection.DesignModule.EnrollmentInfo.EnrollmentCount\r\n      : \"Not Specified\";\r\n  const locations =\r\n    \"ContactsLocationsModule\" in study.ProtocolSection &&\r\n    \"LocationList\" in study.ProtocolSection.ContactsLocationsModule\r\n      ? study.ProtocolSection.ContactsLocationsModule.LocationList.Location\r\n      : \"No Data\";\r\n  let status = study.ProtocolSection.StatusModule.OverallStatus;\r\n  status =\r\n    status === \"Recruiting\"\r\n      ? \"Recruiting\"\r\n      : status === \"Completed\"\r\n      ? \"Completed\"\r\n      : \"Not Recruiting\";\r\n  const healthyVolunteer =\r\n    study.ProtocolSection.EligibilityModule.HealthyVolunteers;\r\n  const gender = study.ProtocolSection.EligibilityModule.Gender;\r\n  const minAge = study.ProtocolSection.EligibilityModule.MinimumAge;\r\n  const maxAge =\r\n    \"MaximumAge\" in study.ProtocolSection.EligibilityModule\r\n      ? study.ProtocolSection.EligibilityModule.MaximumAge\r\n      : \"No Data\";\r\n  const criteria = study.ProtocolSection.EligibilityModule.EligibilityCriteria.split(\r\n    \"\\n\"\r\n  ).filter((item) => item !== \"\");\r\n\r\n  let recipientList = [];\r\n  if (\"ContactsLocationsModule\" in study.ProtocolSection) {\r\n    if (\"CentralContactList\" in study.ProtocolSection.ContactsLocationsModule) {\r\n      study.ProtocolSection.ContactsLocationsModule.CentralContactList.CentralContact.forEach(\r\n        (item) => {\r\n          item.CentralContactRole === \"Contact\" &&\r\n            recipientList.push([\r\n              item.CentralContactName,\r\n              item.CentralContactEMail,\r\n            ]);\r\n        }\r\n      );\r\n    } else if (\r\n      \"LocationList\" in study.ProtocolSection.ContactsLocationsModule\r\n    ) {\r\n      study.ProtocolSection.ContactsLocationsModule.LocationList.Location.forEach(\r\n        (item) => {\r\n          \"LocationContactList\" in item &&\r\n            item.LocationContactList.LocationContact.forEach((item) => {\r\n              item.LocationContactRole === \"Contact\" &&\r\n                recipientList.push([\r\n                  item.LocationContactName,\r\n                  item.LocationContactEMail,\r\n                ]);\r\n            });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"modal fade\"\r\n      key={NCTId}\r\n      id={`slide-in-${NCTId}`}\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-labelledby={`slide-in-${NCTId}`}\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div\r\n        className=\"modal-dialog modal-dialog-slideout modal-lg\"\r\n        role=\"document\"\r\n      >\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <div>\r\n              <h5 className=\"modal-title\">Study ID: {NCTId}</h5>\r\n              {/* <h5 classname=\"modal-title\">Last Updated on {lastUpdate}</h5> */}\r\n              <div className=\"modal-title-status\">\r\n                <ButtonStatus status={status} />\r\n                &nbsp;\r\n                <span>Last Update: {lastUpdate}</span>\r\n              </div>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">×</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div>\r\n              <h6 className=\"font-weight-bold\">Protocol Title:</h6>\r\n              <span>{protocolTitle}</span>\r\n            </div>\r\n            <br />\r\n            <div>\r\n              <h6 className=\"font-weight-bold\">Study Summary:</h6>\r\n              <span>{briefSummary}</span>\r\n            </div>\r\n            <br />\r\n            <div>\r\n              <h6 className=\"font-weight-bold\">\r\n                Study Type{\" \"}\r\n                {studyType === \"Interventional\" && (\r\n                  <ButtonInfo\r\n                    content={\r\n                      \"An interventional trial is a type of clinical study in which participants are assigned to groups that receive one or more intervention/treatment (or no intervention) so that researchers can evaluate the effects of the interventions on biomedical or health-related outcomes.\"\r\n                    }\r\n                  />\r\n                )}\r\n                {studyType === \"Observational\" && (\r\n                  <ButtonInfo\r\n                    content={\r\n                      \"An observational trial is a type of clinical study in which participants are identified as belonging to study groups and are assessed for biomedical or health outcomes. A patient registry is a type of observational study.\"\r\n                    }\r\n                  />\r\n                )}{\" \"}\r\n                :\r\n              </h6>\r\n              <span>{studyType} trial</span>\r\n            </div>\r\n            <br />\r\n            {studyType === \"Interventional\" && (\r\n              <div>\r\n                <div>\r\n                  <h6 className=\"font-weight-bold\">\r\n                    Intervention Arms Involved{\" \"}\r\n                    <ButtonInfo\r\n                      content={\r\n                        \"A group or subgroup of participants in a clinical trial that receives a specific intervention/treatment, or no intervention, according to the trial's protocol.\"\r\n                      }\r\n                    />{\" \"}\r\n                    :\r\n                  </h6>\r\n                  <table className=\"table table-borderless table-sm\">\r\n                    <tbody>\r\n                      {interventionDetails.map((intervention, index) => {\r\n                        return (\r\n                          <>\r\n                            <tr>\r\n                              <td className=\"modal-intervention-top\">\r\n                                {index + 1}.\r\n                              </td>\r\n                              <td className=\"modal-intervention-top\">\r\n                                {intervention.InterventionName}\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td className=\"modal-intervention-bottom\"></td>\r\n                              <td className=\"modal-intervention-bottom\">\r\n                                {intervention.InterventionDescription}\r\n                              </td>\r\n                            </tr>\r\n                          </>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <br />\r\n                {primaryPurpose !== \"No Data\" && (\r\n                  <div>\r\n                    <div>\r\n                      <h6 className=\"font-weight-bold\">\r\n                        Primary Purpose{\" \"}\r\n                        <ButtonInfo\r\n                          content={\r\n                            \"The main reason for the clinical trial. The types of primary purpose are: treatment, prevention, diagnostic, supportive care, screening, health services research, basic science, and other.\"\r\n                          }\r\n                        />{\" \"}\r\n                        :\r\n                      </h6>\r\n                      <span>{primaryPurpose}</span>\r\n                    </div>\r\n                    <br />\r\n                  </div>\r\n                )}\r\n\r\n                <div>\r\n                  <h6 className=\"font-weight-bold\">\r\n                    Study Phase{\" \"}\r\n                    <ButtonInfo\r\n                      content={\r\n                        \"The stage of a clinical trial studying a drug or biological product, based on definitions developed by the U.S. Food and Drug Administration (FDA). The phase is based on the study's objective, the number of participants, and other characteristics. There are five phases: Early Phase 1 (formerly listed as Phase 0), Phase 1, Phase 2, Phase 3, and Phase 4. Not Applicable is used to describe trials without FDA-defined phases, including trials of devices or behavioral interventions.\"\r\n                      }\r\n                    />{\" \"}\r\n                    :\r\n                  </h6>\r\n                  <span>{phase}</span>\r\n                </div>\r\n                <br />\r\n              </div>\r\n            )}\r\n            {biospec !== \"Not Applicable\" && (\r\n              <div>\r\n                <div>\r\n                  <h6 className=\"font-weight-bold\">Biospecimens Involved:</h6>\r\n                  <span>{biospec}</span>\r\n                </div>\r\n                <br />\r\n              </div>\r\n            )}\r\n            <div>\r\n              <h6 className=\"font-weight-bold\">\r\n                {conditions.length > 1\r\n                  ? \"Target Conditions\"\r\n                  : \"Target Condition\"}{\" \"}\r\n                <ButtonInfo content=\"The disease, disorder, syndrome, illness, or injury that is being studied.\" />{\" \"}\r\n                :\r\n              </h6>\r\n              {conditions.map((condition) => (\r\n                <p key={condition}>{condition}</p>\r\n              ))}\r\n            </div>\r\n            <br />\r\n            <div>\r\n              <h6 className=\"font-weight-bold\">\r\n                Target Enrolment{\" \"}\r\n                <ButtonInfo content=\"Number of participants that the researchers need for this study.\" />{\" \"}\r\n                :\r\n              </h6>\r\n              <span>\r\n                {enrollmentCount !== \"Not Specified\"\r\n                  ? `${enrollmentCount} participants`\r\n                  : `${enrollmentCount}`}\r\n              </span>\r\n            </div>\r\n            <br />\r\n            <div>\r\n              <h6 className=\"font-weight-bold\">\r\n                Study Locations{\" \"}\r\n                <ButtonInfo\r\n                  content={\r\n                    \"Locations that are currently conducting this study. You may specify your preferred location during your application.\"\r\n                  }\r\n                />{\" \"}\r\n                :\r\n              </h6>\r\n              {locations !== \"No Data\" ? (\r\n                locations.map((location) => (\r\n                  <p key={location}>\r\n                    {location.LocationFacility}, {location.LocationCountry}\r\n                  </p>\r\n                ))\r\n              ) : (\r\n                <p>No Data</p>\r\n              )}\r\n            </div>\r\n            <br />\r\n\r\n            <div>\r\n              <hr />\r\n              <h6 className=\"font-weight-bold\">Eligibility Criteria:</h6>\r\n              <hr />\r\n              <div>\r\n                <h6 className=\"font-weight-bold\">Gender:</h6>\r\n                <span>{gender}</span>\r\n              </div>\r\n              <br />\r\n              <div>\r\n                {maxAge !== \"No Data\" ? (\r\n                  <h6 className=\"font-weight-bold\">Age Group:</h6>\r\n                ) : (\r\n                  <h6 className=\"font-weight-bold\">Minimum Age:</h6>\r\n                )}\r\n                {/* <h6 className=\"font-weight-bold\">Age Group:</h6> */}\r\n                {maxAge !== \"No Data\" ? (\r\n                  <span>\r\n                    {minAge} to {maxAge}\r\n                  </span>\r\n                ) : (\r\n                  <span>{minAge}</span>\r\n                )}\r\n              </div>\r\n              <br />\r\n              <div>\r\n                <h6 className=\"font-weight-bold\">Accepts Healthy Volunteer:</h6>\r\n                <span>{healthyVolunteer === \"No\" ? \"No\" : \"Yes\"}</span>\r\n              </div>\r\n              <br />\r\n              <table className=\"table table-borderless table-sm\">\r\n                <tbody>\r\n                  {criteria.map((item, index) => {\r\n                    return item.toLowerCase() === \"inclusion criteria:\" ? (\r\n                      <tr key={index}>\r\n                        <td\r\n                          colSpan=\"2\"\r\n                          className=\"font-weight-bold modal-inclusion-criteria\"\r\n                        >\r\n                          Inclusion Criteria{\" \"}\r\n                          <ButtonInfo\r\n                            content={\r\n                              \"A type of eligibility criteria. These are the reasons that a person is ALLOWED to participate in a clinical study.\"\r\n                            }\r\n                          />{\" \"}\r\n                          :\r\n                        </td>\r\n                      </tr>\r\n                    ) : item.toLowerCase() === \"exclusion criteria:\" ? (\r\n                      <tr key={index}>\r\n                        <td\r\n                          colSpan=\"2\"\r\n                          className=\"font-weight-bold modal-exclusion-criteria\"\r\n                        >\r\n                          Exclusion Criteria{\" \"}\r\n                          <ButtonInfo\r\n                            content={\r\n                              \"A type of eligibility criteria. These are reasons that a person is NOT ALLOWED to participate in a clinical study.\"\r\n                            }\r\n                          />{\" \"}\r\n                          :\r\n                        </td>\r\n                      </tr>\r\n                    ) : (\r\n                      <tr key={index}>\r\n                        <td>&bull;</td>\r\n                        <td>\r\n                          {item[0] !== item[0].toUpperCase()\r\n                            ? item.replace(item[0], item[0].toUpperCase())\r\n                            : item}\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <br />\r\n            <OptInForm NCTId={NCTId} recipientList={recipientList} />\r\n\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-dismiss=\"modal\"\r\n              id={`close-slide-in-${NCTId}`}\r\n            >\r\n              Close\r\n            </button>\r\n            {/* <button type=\"button\" className=\"btn btn-primary\">Apply</button> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlideIn;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FavButton from \"./FavButton.js\";\r\nimport SlideIn from \"./SlideIn.js\";\r\nimport ButtonStatus from \"./ButtonStatus.js\";\r\n\r\nconst Card = ({ study, index }) => {\r\n  const NCTId = study.ProtocolSection.IdentificationModule.NCTId;\r\n  const protocolTitle =\r\n    study.ProtocolSection.IdentificationModule.OfficialTitle;\r\n  const studyType = study.ProtocolSection.DesignModule.StudyType;\r\n  const healthyVolunteer =\r\n    \"HealthyVolunteers\" in study.ProtocolSection.EligibilityModule\r\n    ? study.ProtocolSection.EligibilityModule.HealthyVolunteers\r\n    : \"No\";\r\n  let conditions =\r\n    study.ProtocolSection.ConditionsModule.ConditionList.Condition;\r\n  if (conditions.length > 3) {\r\n    conditions = conditions.slice(0, 2);\r\n    conditions.push(\"...\");\r\n  }\r\n  const enrollmentCount =\r\n    \"EnrollmentInfo\" in study.ProtocolSection.DesignModule\r\n      ? study.ProtocolSection.DesignModule.EnrollmentInfo.EnrollmentCount\r\n      : \"Not Specified\";\r\n  let locations =\r\n    \"ContactsLocationsModule\" in study.ProtocolSection &&\r\n    \"LocationList\" in study.ProtocolSection.ContactsLocationsModule\r\n      ? study.ProtocolSection.ContactsLocationsModule.LocationList.Location\r\n      : \"No Data\";\r\n  if (locations !== \"No Data\" && locations.length > 3) {\r\n    locations = locations.slice(0, 2);\r\n    locations.push({ LocationFacility: \"...\" });\r\n  }\r\n\r\n  let status = study.ProtocolSection.StatusModule.OverallStatus;\r\n  status =\r\n    status === \"Recruiting\"\r\n      ? \"Recruiting\"\r\n      : status === \"Completed\"\r\n      ? \"Completed\"\r\n      : \"Not Recruiting\";\r\n\r\n  const handleFavClick = (favourite, NCTId) => {\r\n    if (favourite) {\r\n      let fav = JSON.parse(localStorage.getItem(\"favourite\")) || [];\r\n      if (fav.indexOf(NCTId) < 0) fav.push(NCTId);\r\n      localStorage.setItem(\"favourite\", JSON.stringify(fav));\r\n    } else {\r\n      let fav = JSON.parse(localStorage.getItem(\"favourite\")) || [];\r\n      if (fav.indexOf(NCTId) >= 0) fav.splice(fav.indexOf(NCTId), 1);\r\n      localStorage.setItem(\"favourite\", JSON.stringify(fav));\r\n    }\r\n  };\r\n\r\n  const openSlideIn = () => {\r\n    document.getElementById(`slide-in-${NCTId}`).click();\r\n    window.history.pushState({ slideIn: {NCTId} }, \"\"); // write twice for it to work\r\n    window.history.pushState({ slideIn: {NCTId} }, \"\");\r\n    window.addEventListener('popstate', closeSlideIn, false);\r\n  }\r\n  const closeSlideIn = (event) => {\r\n    if (event.state) {\r\n      document.getElementById(`close-slide-in-${NCTId}`).click();\r\n      window.removeEventListener('popstate', closeSlideIn, false)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <tr className=\"table-card\" key={NCTId}>\r\n      <td className=\"table-serial\">\r\n        <span>{index + 1}.</span>\r\n      </td>\r\n      <td className=\"table-content\">\r\n        <span>\r\n          <a data-toggle=\"modal\" onClick={openSlideIn} href={`#slide-in-${NCTId}`}>\r\n            {protocolTitle}\r\n          </a>\r\n        </span>\r\n        <br />\r\n        <div className=\"table-content-info\">\r\n          <table className=\"table table-borderless table-sm\">\r\n            <tbody>\r\n              <tr>\r\n                <td>Study Type:</td>\r\n                <td>{studyType}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  {conditions.length > 1\r\n                    ? \"Target Conditions:\"\r\n                    : \"Target Condition:\"}\r\n                </td>\r\n                <td>\r\n                  {conditions.map((condition, index) => (\r\n                    <p key={index}>{condition}</p>\r\n                  ))}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Healthy Volunteers:</td>\r\n                <td>{healthyVolunteer === \"No\" ? \"No\" : \"Yes\"}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Target Enrolment:</td>\r\n                <td>\r\n                  {enrollmentCount !== \"Not Specified\"\r\n                    ? `${enrollmentCount} participants`\r\n                    : `${enrollmentCount}`}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>{locations.length > 1 ? \"Locations:\" : \"Location:\"}</td>\r\n                <td>\r\n                  {locations !== \"No Data\" ? (\r\n                    locations.map((location, index) => (\r\n                      <p key={index}>\r\n                        {location.LocationFacility}\r\n                        {location.LocationFacility !== \"...\" && \",\"}{\" \"}\r\n                        {location.LocationCountry}\r\n                      </p>\r\n                    ))\r\n                  ) : (\r\n                    <p>No Data</p>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        {/* bottom row */}\r\n        <div className=\"table-content-more\">\r\n          <FavButton handleClick={handleFavClick} NCTId={NCTId} />\r\n          <ButtonStatus status={status} />\r\n        </div>\r\n      <SlideIn study={study} />\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\nCard.propTypes = {\r\n  study: PropTypes.object.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\nimport Navbar from \"../elements/Navbar.js\";\nimport Jumbotron from \"../elements/Jumbotron.js\";\nimport Spinner from \"../elements/Spinner.js\";\nimport LoadMoreBtn from \"../elements/LoadMoreBtn.js\";\nimport ScrollUpButton from \"react-scroll-up-button\";\nimport Card from \"../elements/Card.js\";\nimport { record_size, base_api } from \"../../others/configuration.js\";\n\nclass App extends React.Component {\n  state = {\n    loading: true,\n    min_rnk: 1,\n    max_rnk: record_size,\n    ConditionSearch: \"\",\n    OfficialTitle: \"\",\n    LocationSearch: \"\",\n    OverallStatus: \"\",\n    StudyType: \"\",\n    HealthyVolunteers: \"\",\n    Gender: \"\",\n    StdAge: \"\",\n    LocationCountry: \"Singapore\",\n    NCTId: \"\",\n    studiesFound: 0,\n    trials: [],\n  };\n\n  apiGenerator() {\n    const api_base_url = base_api;\n    const keyPrefix = \"AREA%5B\";\n    const keySuffix = \"%5D\";\n    const exprPrefix = \"%28\";\n    const exprSuffix = \"%29\";\n    let expr = \"\";\n    for (let key in this.state) {\n      if (\n        key[0] === key[0].toUpperCase() &&\n        this.state[key] !== \"\" &&\n        key !== \"NCTId\"\n      ) {\n        if (key === \"OverallStatus\") {\n          expr += `${keyPrefix}${key}${keySuffix}COVERAGE%5BFullMatch%5D${exprPrefix}${this.state[key]}${exprSuffix}+AND+`; // special handling to filter out terms like 'not yet recruiting'\n        } else {\n          expr += `${keyPrefix}${key}${keySuffix}${exprPrefix}${this.state[key]}${exprSuffix}+AND+`;\n        }\n      }\n    }\n    if (expr.length > 0) expr = expr.substr(0, expr.length - 5); //remove final '+AND+'\n    return `${api_base_url}&expr=${expr}&min_rnk=${this.state.min_rnk}&max_rnk=${this.state.max_rnk}&fmt=json`;\n  }\n\n  fetchItems = async (api_url) => {\n    let fav = JSON.parse(localStorage.getItem(\"favourite\")) || [];\n    try {\n      const result = await (await fetch(api_url)).json();\n      this.setState({\n        loading: false,\n        studiesFound: result.FullStudiesResponse.NStudiesFound,\n        trials: result.FullStudiesResponse.FullStudies,\n        NCTId: fav,\n      });\n    } catch (error) {\n      console.log(`Error fetching ${api_url}: ${error}`);\n    }\n  };\n\n  componentDidMount() {\n    let api_url = this.apiGenerator();\n    this.fetchItems(api_url);\n  }\n\n  handleConditionSuggestions = (searchTerm) => {\n    this.setState({\n      ConditionSearch: searchTerm\n    })\n\n    let base_url = \"https://clinicaltrials.gov/ct2/rpc/extend/cond?cond=\";\n    let full_url = base_url + searchTerm;\n    fetch(full_url)\n      .then((res) => res.json())\n      .then((res) => alert(res));\n  }\n\n  handleConditionSearch = (searchTerm) => {\n    this.setState({\n      loading: true,\n      ConditionSearch: searchTerm,\n      min_rnk: 1,\n      max_rnk: record_size,\n      trials: [],\n    });\n    let api_url = this.apiGenerator();\n    this.fetchItems(api_url);\n  };\n\n  handleStudySearch = (searchTerm) => {\n    this.setState({\n      loading: true,\n      OfficialTitle: searchTerm,\n      min_rnk: 1,\n      max_rnk: record_size,\n      trials: [],\n    });\n    let api_url = this.apiGenerator();\n    this.fetchItems(api_url);\n  };\n\n  handleLocationSearch = (searchTerm) => {\n    this.setState({\n      loading: true,\n      LocationSearch: searchTerm,\n      min_rnk: 1,\n      max_rnk: record_size,\n      trials: [],\n    });\n    let api_url = this.apiGenerator();\n    this.fetchItems(api_url);\n  };\n\n  getOverallStatus = () => {\n    const recruitingStatus = document.getElementById(\"status-recruiting\");\n    const notRecruitingStatus = document.getElementById(\n      \"status-not-recruiting\"\n    );\n    let result = [];\n    recruitingStatus.checked && result.push(\"Recruiting\");\n    notRecruitingStatus.checked && result.push(\"NOT Recruiting\");\n    return result.join(\"+OR+\");\n  };\n\n  handleRecruitingClick = () => {\n    const overallStatus = this.getOverallStatus();\n    this.setState({\n      loading: true,\n      OverallStatus: overallStatus,\n      min_rnk: 1,\n      max_rnk: record_size,\n      trials: [],\n    });\n    let api_url = this.apiGenerator();\n    this.fetchItems(api_url);\n  };\n\n  getStudyType = () => {\n    const interventionalType = document.getElementById(\"type-interventional\");\n    const observationalType = document.getElementById(\"type-observational\");\n    let result = [];\n    interventionalType.checked && result.push(\"Interventional\");\n    observationalType.checked && result.push(\"Observational\");\n    if (result.length === 2) result = []; // include both types if both checkboxes are selected\n    return result.join(\"+OR+\");\n  };\n\n  handleTypeClick = () => {\n    const studyType = this.getStudyType();\n    this.setState({\n      loading: true,\n      StudyType: studyType,\n      min_rnk: 1,\n      max_rnk: record_size,\n      trials: [],\n    });\n    let api_url = this.apiGenerator();\n    this.fetchItems(api_url);\n  };\n\n  getHealthyVolunteers = () => {\n    const volunteersYes = document.getElementById(\"healthy-volunteers-yes\");\n    const volunteersNo = document.getElementById(\"healthy-volunteers-no\");\n    let result = [];\n    volunteersYes.checked && result.push(\"Accepts Healthy Volunteers\");\n    volunteersNo.checked && result.push(\"NOT Accept Healthy Volunteers\");\n    return result.join(\"+OR+\");\n  };\n\n  handleVolunteersClick = () => {\n    const healthyVolunteers = this.getHealthyVolunteers();\n    this.setState({\n      loading: true,\n      HealthyVolunteers: healthyVolunteers,\n      min_rnk: 1,\n      max_rnk: record_size,\n      trials: [],\n    });\n    let api_url = this.apiGenerator();\n    this.fetchItems(api_url);\n  };\n\n  getGenders = () => {\n    const genderMale = document.getElementById(\"gender-male\");\n    const genderFemale = document.getElementById(\"gender-female\");\n    let result = [];\n    genderMale.checked && result.push(\"Male\");\n    genderFemale.checked && result.push(\"Female\");\n    if (result.length === 2) result = []; // include both genders if both checkboxes are selected\n    return result.join(\"+OR+\");\n  };\n\n  handleGenderClick = () => {\n    const gender = this.getGenders();\n    this.setState({\n      loading: true,\n      Gender: gender,\n      min_rnk: 1,\n      max_rnk: record_size,\n      trials: [],\n    });\n    let api_url = this.apiGenerator();\n    this.fetchItems(api_url);\n  };\n\n  getAgeGroups = () => {\n    const ageChild = document.getElementById(\"age-child\");\n    const ageAdult = document.getElementById(\"age-adult\");\n    const ageOldAdult = document.getElementById(\"age-old-adult\");\n    let result = [];\n    ageChild.checked && result.push(\"Child\");\n    ageAdult.checked && result.push(\"Adult\");\n    ageOldAdult.checked && result.push(\"Older Adult\");\n    if (result.length === 3) result = []; // include all age groups if all checkboxes are selected\n    return result.join(\"+OR+\");\n  };\n\n  handleAgeGroupClick = () => {\n    const ageGroup = this.getAgeGroups();\n    this.setState({\n      loading: true,\n      StdAge: ageGroup,\n      min_rnk: 1,\n      max_rnk: record_size,\n      trials: [],\n    });\n    let api_url = this.apiGenerator();\n    this.fetchItems(api_url);\n  };\n\n  loadMoreItems = () => {\n    this.setState({\n      loading: true,\n      min_rnk: this.state.min_rnk + record_size,\n      max_rnk: this.state.max_rnk + record_size,\n    });\n\n    this.timeout = setTimeout(() => {\n      if (this.state.min_rnk <= this.state.studiesFound) {\n        let api_url = this.apiGenerator();\n        fetch(api_url)\n          .then((res) => res.json())\n          .then((res) => {\n            this.setState((state) => ({\n              loading: false,\n              trials: [...state.trials, ...res.FullStudiesResponse.FullStudies],\n            }));\n          });\n      } else {\n        this.setState({\n          loading: false,\n        });\n        alert(\"All records shown\");\n      }\n    }, 100);\n  };\n\n  render() {\n    return (\n      <div className=\"container-fluid p-0\">\n        <div class=\"alert alert-danger text-center\" role=\"alert\">\n          Currently under development, some functions may not work!\n        </div>\n        <ScrollUpButton\n          ContainerClassName=\"AnyClassForContainer\"\n          TransitionClassName=\"AnyClassForTransition\"\n        />\n        <Navbar\n          handleConditionSuggestions={this.handleConditionSuggestions}\n          handleConditionSearch={this.handleConditionSearch}\n          favCount={this.state.NCTId.length}\n        />\n        <Jumbotron\n          studiesFound={this.state.studiesFound}\n          loading={this.state.loading}\n          handleConditionSearch={this.handleConditionSearch}\n          handleStudySearch={this.handleStudySearch}\n          handleLocationSearch={this.handleLocationSearch}\n          handleRecruitingClick={this.handleRecruitingClick}\n          handleTypeClick={this.handleTypeClick}\n          handleVolunteersClick={this.handleVolunteersClick}\n          handleGenderClick={this.handleGenderClick}\n          handleAgeGroupClick={this.handleAgeGroupClick}\n        />\n        {this.state.trials !== undefined ? (\n          <div className=\"container\">\n            <div className=\"row\">\n              <div\n                className={`border content ${\n                  this.state.loading &&\n                  this.state.min_rnk === 1 &&\n                  \"content-loading\"\n                }`}\n              >\n                <table className=\"table\">\n                  <tbody>\n                    {this.state.trials\n                      .filter(\n                        (trial) =>\n                          trial.Study.ProtocolSection.StatusModule\n                            .OverallStatus !== \"Withheld\"\n                      )\n                      .map((trial, i) => (\n                        <Card study={trial.Study} index={i} key={i} />\n                      ))}\n                  </tbody>\n                </table>\n              </div>\n\n              {/* sidebar */}\n              <div>{/* to render sidebar here */}</div>\n            </div>\n            {this.state.loading ? (\n              <Spinner />\n            ) : this.state.studiesFound > this.state.max_rnk ? (\n              <LoadMoreBtn handleClick={this.loadMoreItems} />\n            ) : (\n              <div className=\"container text-center mt-4 mb-5\">\n                <span>All records shown</span>\n              </div>\n            )}\n          </div>\n        ) : (\n          <div className=\"container text-center not-found\">\n            <img src={require(`../../images/not-found.jpg`)} alt=\"not-found\" />\n            <br />\n            <span>No data found</span>\n            <br />\n            <span>Please try a different search criteria</span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export const record_size = 10;\r\nexport const text_search_delay = 750;\r\nexport const filter_check_delay = 250;\r\n\r\n// API configuration\r\n\r\nexport const base_api = \"https://clinicaltrials.gov/api/query/full_studies?\";","import React from \"react\";\r\n// import \"./BrowseTrials.css\";\r\nimport Navbar from \"../elements/Navbar.js\";\r\nimport Jumbotron from \"../elements/Jumbotron.js\";\r\nimport Spinner from \"../elements/Spinner.js\";\r\nimport LoadMoreBtn from \"../elements/LoadMoreBtn.js\";\r\nimport ScrollUpButton from \"react-scroll-up-button\";\r\nimport Card from \"../elements/Card.js\";\r\nimport { record_size, base_api } from \"../../others/configuration.js\";\r\n\r\nclass BrowseFavourites extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    min_rnk: 1,\r\n    max_rnk: record_size,\r\n    ConditionSearch: \"\",\r\n    OfficialTitle: \"\",\r\n    LocationSearch: \"\",\r\n    OverallStatus: \"\",\r\n    StudyType: \"\",\r\n    HealthyVolunteers: \"\",\r\n    Gender: \"\",\r\n    StdAge: \"\",\r\n    LocationCountry: \"Singapore\",\r\n    NCTId: \"\",\r\n    studiesFound: 0,\r\n    trials: [],\r\n  };\r\n\r\n  apiGenerator() {\r\n    const api_base_url = base_api;\r\n    const keyPrefix = \"AREA%5B\";\r\n    const keySuffix = \"%5D\";\r\n    const exprPrefix = \"%28\";\r\n    const exprSuffix = \"%29\";\r\n    let expr = \"\";\r\n    for (let key in this.state) {\r\n      if (key[0] === key[0].toUpperCase() && this.state[key] !== \"\") {\r\n        if (key === \"OverallStatus\") {\r\n          expr += `${keyPrefix}${key}${keySuffix}COVERAGE%5BFullMatch%5D${exprPrefix}${this.state[key]}${exprSuffix}+AND+`; // special handling to filter out terms like 'not yet recruiting'\r\n        } else if (key === \"NCTId\") {\r\n          let NCTIds = this.state[key].join(\"+OR+\");\r\n          expr += `${keyPrefix}${key}${keySuffix}${exprPrefix}${NCTIds}${exprSuffix}+AND+`; // handle favourite studies\r\n        } else {\r\n          expr += `${keyPrefix}${key}${keySuffix}${exprPrefix}${this.state[key]}${exprSuffix}+AND+`;\r\n        }\r\n      }\r\n    }\r\n    if (expr.length > 0) expr = expr.substr(0, expr.length - 5); //remove final '+AND+'\r\n    return `${api_base_url}&expr=${expr}&min_rnk=${this.state.min_rnk}&max_rnk=${this.state.max_rnk}&fmt=json`;\r\n  }\r\n\r\n  fetchItems = async api_url => {\r\n    try {\r\n      const result = await(await fetch(api_url)).json();\r\n      this.setState({\r\n        loading: false,\r\n        studiesFound: result.FullStudiesResponse.NStudiesFound,\r\n        trials: result.FullStudiesResponse.FullStudies,\r\n      })\r\n    }\r\n    catch(error) {\r\n      console.log(`Error fetching ${api_url}: ${error}`)\r\n    }\r\n    \r\n  }\r\n\r\n  // fetchItems = (api_url) => {\r\n  //   fetch(api_url)\r\n  //     .then((res) => res.json())\r\n  //     .then((res) => {\r\n  //       this.setState({\r\n  //         loading: false,\r\n  //         studiesFound: res.FullStudiesResponse.NStudiesFound,\r\n  //         trials: res.FullStudiesResponse.FullStudies,\r\n  //       });\r\n  //     });\r\n  // };\r\n\r\n  componentDidMount() {\r\n    let fav = JSON.parse(localStorage.getItem(\"favourite\")) || [];\r\n    if (fav.length > 0) {\r\n        this.setState({\r\n            NCTId: fav,\r\n          });\r\n      \r\n          this.timeout = setTimeout(() => {\r\n            let api_url = this.apiGenerator();\r\n            this.fetchItems(api_url);\r\n          }, 100);\r\n    } else {\r\n        this.setState({\r\n            loading: false,\r\n        })\r\n    }\r\n  }\r\n  \r\n  handleConditionSearch = (searchTerm) => {\r\n    this.setState({\r\n      loading: true,\r\n      ConditionSearch: searchTerm,\r\n      min_rnk: 1,\r\n      max_rnk: record_size,\r\n      trials: [],\r\n    });\r\n    let api_url = this.apiGenerator();\r\n    this.fetchItems(api_url);\r\n  };\r\n\r\n  handleStudySearch = (searchTerm) => {\r\n    this.setState({\r\n      loading: true,\r\n      OfficialTitle: searchTerm,\r\n      min_rnk: 1,\r\n      max_rnk: record_size,\r\n      trials: [],\r\n    });\r\n    let api_url = this.apiGenerator();\r\n    this.fetchItems(api_url);\r\n  };\r\n\r\n  handleLocationSearch = (searchTerm) => {\r\n    this.setState({\r\n      loading: true,\r\n      LocationSearch: searchTerm,\r\n      min_rnk: 1,\r\n      max_rnk: record_size,\r\n      trials: [],\r\n    });\r\n    let api_url = this.apiGenerator();\r\n    this.fetchItems(api_url);\r\n  };\r\n\r\n  getOverallStatus = () => {\r\n    const recruitingStatus = document.getElementById(\"status-recruiting\");\r\n    const notRecruitingStatus = document.getElementById(\r\n      \"status-not-recruiting\"\r\n    );\r\n    let result = [];\r\n    recruitingStatus.checked && result.push(\"Recruiting\");\r\n    notRecruitingStatus.checked && result.push(\"NOT Recruiting\");\r\n    return result.join(\"+OR+\");\r\n  };\r\n\r\n  handleRecruitingClick = () => {\r\n    const overallStatus = this.getOverallStatus();\r\n    this.setState({\r\n      loading: true,\r\n      OverallStatus: overallStatus,\r\n      min_rnk: 1,\r\n      max_rnk: record_size,\r\n      trials: [],\r\n    });\r\n    let api_url = this.apiGenerator();\r\n    this.fetchItems(api_url);\r\n  };\r\n\r\n  getStudyType = () => {\r\n    const interventionalType = document.getElementById(\"type-interventional\");\r\n    const observationalType = document.getElementById(\"type-observational\");\r\n    let result = [];\r\n    interventionalType.checked && result.push(\"Interventional\");\r\n    observationalType.checked && result.push(\"Observational\");\r\n    if (result.length === 2) result = []; // include both types if both checkboxes are selected\r\n    return result.join(\"+OR+\");\r\n  };\r\n\r\n  handleTypeClick = () => {\r\n    const studyType = this.getStudyType();\r\n    this.setState({\r\n      loading: true,\r\n      StudyType: studyType,\r\n      min_rnk: 1,\r\n      max_rnk: record_size,\r\n      trials: [],\r\n    });\r\n    let api_url = this.apiGenerator();\r\n    this.fetchItems(api_url);\r\n  };\r\n\r\n  getHealthyVolunteers = () => {\r\n    const volunteersYes = document.getElementById(\"healthy-volunteers-yes\");\r\n    const volunteersNo = document.getElementById(\"healthy-volunteers-no\");\r\n    let result = [];\r\n    volunteersYes.checked && result.push(\"Accepts Healthy Volunteers\");\r\n    volunteersNo.checked && result.push(\"NOT Accept Healthy Volunteers\");\r\n    return result.join(\"+OR+\");\r\n  };\r\n\r\n  handleVolunteersClick = () => {\r\n    const healthyVolunteers = this.getHealthyVolunteers();\r\n    this.setState({\r\n      loading: true,\r\n      HealthyVolunteers: healthyVolunteers,\r\n      min_rnk: 1,\r\n      max_rnk: record_size,\r\n      trials: [],\r\n    });\r\n    let api_url = this.apiGenerator();\r\n    this.fetchItems(api_url);\r\n  };\r\n\r\n  getGenders = () => {\r\n    const genderMale = document.getElementById(\"gender-male\");\r\n    const genderFemale = document.getElementById(\"gender-female\");\r\n    let result = [];\r\n    genderMale.checked && result.push(\"Male\");\r\n    genderFemale.checked && result.push(\"Female\");\r\n    if (result.length === 2) result = []; // include both genders if both checkboxes are selected\r\n    return result.join(\"+OR+\");\r\n  };\r\n\r\n  handleGenderClick = () => {\r\n    const gender = this.getGenders();\r\n    this.setState({\r\n      loading: true,\r\n      Gender: gender,\r\n      min_rnk: 1,\r\n      max_rnk: record_size,\r\n      trials: [],\r\n    });\r\n    let api_url = this.apiGenerator();\r\n    this.fetchItems(api_url);\r\n  };\r\n\r\n  getAgeGroups = () => {\r\n    const ageChild = document.getElementById(\"age-child\");\r\n    const ageAdult = document.getElementById(\"age-adult\");\r\n    const ageOldAdult = document.getElementById(\"age-old-adult\");\r\n    let result = [];\r\n    ageChild.checked && result.push(\"Child\");\r\n    ageAdult.checked && result.push(\"Adult\");\r\n    ageOldAdult.checked && result.push(\"Older Adult\");\r\n    if (result.length === 3) result = []; // include all age groups if all checkboxes are selected\r\n    return result.join(\"+OR+\");\r\n  };\r\n\r\n  handleAgeGroupClick = () => {\r\n    const ageGroup = this.getAgeGroups();\r\n    this.setState({\r\n      loading: true,\r\n      StdAge: ageGroup,\r\n      min_rnk: 1,\r\n      max_rnk: record_size,\r\n      trials: [],\r\n    });\r\n    let api_url = this.apiGenerator();\r\n    this.fetchItems(api_url);\r\n  };\r\n\r\n  loadMoreItems = () => {\r\n    this.setState({\r\n      loading: true,\r\n      min_rnk: this.state.min_rnk + record_size,\r\n      max_rnk: this.state.max_rnk + record_size,\r\n    });\r\n\r\n    this.timeout = setTimeout(() => {\r\n      if (this.state.min_rnk <= this.state.studiesFound) {\r\n        let api_url = this.apiGenerator();\r\n        fetch(api_url)\r\n          .then((res) => res.json())\r\n          .then((res) => {\r\n            this.setState((state) => ({\r\n              loading: false,\r\n              trials: [...state.trials, ...res.FullStudiesResponse.FullStudies],\r\n            }));\r\n          });\r\n      } else {\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n        alert(\"All records shown\");\r\n      }\r\n    }, 750);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid p-0\">\r\n        <ScrollUpButton\r\n          ContainerClassName=\"AnyClassForContainer\"\r\n          TransitionClassName=\"AnyClassForTransition\"\r\n        />\r\n        <Navbar handleConditionSearch={this.handleConditionSearch} favCount={this.state.NCTId.length} />\r\n        <Jumbotron\r\n          studiesFound={this.state.studiesFound}\r\n          loading={this.state.loading}\r\n          handleConditionSearch={this.handleConditionSearch}\r\n          handleStudySearch={this.handleStudySearch}\r\n          handleLocationSearch={this.handleLocationSearch}\r\n          handleRecruitingClick={this.handleRecruitingClick}\r\n          handleTypeClick={this.handleTypeClick}\r\n          handleVolunteersClick={this.handleVolunteersClick}\r\n          handleGenderClick={this.handleGenderClick}\r\n          handleAgeGroupClick={this.handleAgeGroupClick}\r\n        />\r\n        {this.state.trials !== undefined && this.state.NCTId.length > 0 ? (\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div\r\n                className={`border content ${\r\n                  this.state.loading &&\r\n                  this.state.min_rnk === 1 &&\r\n                  \"content-loading\"\r\n                }`}\r\n              >\r\n                <table className=\"table\">\r\n                  <tbody>\r\n                    {this.state.trials\r\n                      .filter(\r\n                        (trial) =>\r\n                          trial.Study.ProtocolSection.StatusModule\r\n                            .OverallStatus !== \"Withheld\"\r\n                      )\r\n                      .map((trial, i) => (\r\n                        <Card study={trial.Study} index={i} />\r\n                      ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n\r\n              {/* sidebar */}\r\n              <div>{/* to render sidebar here */}</div>\r\n            </div>\r\n            {this.state.loading ? (\r\n              <Spinner />\r\n            ) : this.state.studiesFound > this.state.max_rnk ? (\r\n              <LoadMoreBtn handleClick={this.loadMoreItems} />\r\n            ) : (\r\n              <div className=\"container text-center mt-4 mb-5\">\r\n                <span>All records shown</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) \r\n        :  \r\n        (\r\n          <div className=\"container text-center not-found\">\r\n            <img src={require(`../../images/not-found.jpg`)} alt=\"not-found\" />\r\n            <br />\r\n            <span>No data found</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BrowseFavourites;\r\n","import React from 'react';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport BrowseTrials from './pages/BrowseTrials.js';\r\nimport BrowseFavourites from './pages/BrowseFavourites.js';\r\n\r\nconst App = () => {\r\n    return (\r\n        // <BrowserRouter basename=\"#/\">\r\n        //     <React.Fragment>\r\n        //         <Switch>\r\n            <HashRouter baseline=\"/\">\r\n                <Route exact path=\"/\" component={BrowseTrials} />\r\n                <Route exact path=\"/favourites\" component={BrowseFavourites} />\r\n                {/* <Route component={NotFound} /> */}\r\n            </HashRouter>\r\n        //         </Switch>\r\n        //     </React.Fragment>\r\n        // </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./others/serviceWorker\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}