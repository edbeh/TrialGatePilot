{"version":3,"sources":["not-found.jpg","logo.svg","SearchCondition.js","Navbar.js","FavButton.js","Card.js","SlideIn.js","SearchStudy.js","SearchLocation.js","CheckBoxFilters.js","Filters.js","Jumbotron.js","Spinner.js","LoadMoreBtn.js","BrowseTrials.js","configuration.js","BrowseFavourites.js","NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SearchCondition","state","value","timeout","doSearch","event","setState","target","clearTimeout","setTimeout","props","handleConditionSearch","className","id","type","placeholder","onChange","this","React","Component","Navbar","favCount","href","src","require","alt","to","data-toggle","data-target","FavButton","favourite","toggleSwitch","handleClick","NCTId","JSON","parse","localStorage","getItem","includes","onClick","Card","study","index","ProtocolSection","IdentificationModule","protocolTitle","OfficialTitle","studyType","DesignModule","StudyType","healthyVolunteer","EligibilityModule","HealthyVolunteers","conditions","ConditionsModule","ConditionList","Condition","length","slice","push","enrollmentCount","EnrollmentInfo","EnrollmentCount","locations","ContactsLocationsModule","LocationList","Location","LocationFacility","status","StatusModule","OverallStatus","key","map","condition","location","LocationCountry","fav","indexOf","setItem","stringify","splice","ButtonStatus","ButtonInfo","content","Tooltip","title","arrow","SlideIn","lastUpdate","LastUpdateSubmitDate","briefSummary","DescriptionModule","BriefSummary","primaryPurpose","DesignInfo","DesignPrimaryPurpose","interventionDetails","ArmsInterventionsModule","InterventionList","Intervention","phase","PhaseList","Phase","biospec","BioSpec","BioSpecDescription","gender","Gender","minAge","MinimumAge","maxAge","MaximumAge","criteria","EligibilityCriteria","split","filter","item","recipientList","CentralContactList","CentralContact","forEach","CentralContactRole","CentralContactName","CentralContactEMail","LocationContactList","LocationContact","LocationContactRole","LocationContactName","LocationContactEMail","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","intervention","InterventionName","InterventionDescription","toLowerCase","colspan","toUpperCase","replace","class","required","name","rows","disabled","SearchStudy","handleStudySearch","SearchLocation","handleLocationSearch","CheckRecruiting","checked","for","tooltip","Filters","handleRecruitingClick","handleTypeClick","handleVolunteersClick","handleGenderClick","handleAgeGroupClick","CheckBoxFilters","window","reload","Jumbotron","studiesFound","loading","toLocaleString","Spinner","LoadMoreBtn","App","min_rnk","max_rnk","ConditionSearch","LocationSearch","StdAge","trials","fetchItems","api_url","fetch","then","res","json","FullStudiesResponse","NStudiesFound","FullStudies","searchTerm","apiGenerator","getOverallStatus","recruitingStatus","document","getElementById","notRecruitingStatus","result","join","overallStatus","getStudyType","interventionalType","observationalType","getHealthyVolunteers","volunteersYes","volunteersNo","healthyVolunteers","getGenders","genderMale","genderFemale","getAgeGroups","ageChild","ageAdult","ageOldAdult","ageGroup","loadMoreItems","alert","expr","substr","ContainerClassName","TransitionClassName","undefined","trial","Study","i","BrowseFavourites","NCTIds","NotFound","baseline","exact","path","component","BrowseTrials","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2161767e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/not-found.3f46d8aa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.2515bf7d.svg\";","import React from 'react';\r\n\r\nclass SearchCondition extends React.Component {\r\n    state = {\r\n        value: '',\r\n    }\r\n\r\n    timeout = null;\r\n\r\n    doSearch = (event) => {\r\n        this.setState({\r\n            value: event.target.value\r\n        })\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout(() => {\r\n           this.props.handleConditionSearch(this.state.value);\r\n        }, 750);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                id=\"search-condition\"\r\n                type=\"text\"\r\n                placeholder=\"Search condition (e.g. COVID)\"\r\n                onChange={this.doSearch}\r\n                value={this.state.value}\r\n            ></input> \r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchCondition;","import React from \"react\";\r\nimport SearchCondition from './SearchCondition.js';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = ({ handleConditionSearch, favCount }) => {\r\n  return (\r\n    <div className=\"navigation-area\">\r\n      <nav className=\"navbar navbar-expand-md col-xs-12 container\">\r\n        <div>\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            <img src={require(`./logo.svg`)} alt=\"logo\" />\r\n            <h4><Link to=\"/\">TrialGate</Link></h4>\r\n          </a>\r\n        </div>\r\n\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#collapsibleNavbar\"\r\n        >\r\n          <span className=\"font-weight-light\">MENU</span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse \" id=\"collapsibleNavbar\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link text-center\" href=\"/\">\r\n                <Link to=\"/\">Browse All Trials</Link>\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item text-center\">\r\n              <a className=\"nav-link\" href=\"/favourites\">\r\n                <Link to=\"/favourites\">My Favourites</Link>\r\n                {favCount > 0 && <span> ({favCount})</span>}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <SearchCondition handleConditionSearch={handleConditionSearch} />\r\n      </nav>\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\n\r\n\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nclass FavButton extends React.Component {\r\n    state = {\r\n        favourite: false\r\n    }\r\n\r\n    timeout = null;\r\n\r\n    toggleSwitch = () => {\r\n        this.setState({\r\n            favourite: !this.state.favourite\r\n        })\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout(() => {\r\n            this.props.handleClick(this.state.favourite, this.props.NCTId);\r\n         }, 200);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let fav = JSON.parse(localStorage.getItem('favourite')) || [];\r\n        if (fav.includes(this.props.NCTId)) {\r\n            this.setState({\r\n                favourite: true\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                favourite: false\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span className={`button-favourite ${this.state.favourite && `favourited`}`} onClick={this.toggleSwitch} id={`fav-${this.props.NCTId}`}>\r\n                <i className=\"fa fa-heart\"></i> {this.state.favourite ? ' Favourited' : ' Add to Favourite'}\r\n            </span>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default FavButton;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FavButton from './FavButton.js';\r\nimport SlideIn from './SlideIn.js'\r\nimport './Card.css';\r\n\r\nconst Card = ({ study, index }) => {\r\n    const NCTId = study.ProtocolSection.IdentificationModule.NCTId\r\n    const protocolTitle = study.ProtocolSection.IdentificationModule.OfficialTitle;\r\n    const studyType = study.ProtocolSection.DesignModule.StudyType;\r\n    const healthyVolunteer = study.ProtocolSection.EligibilityModule.HealthyVolunteers;\r\n    let conditions = study.ProtocolSection.ConditionsModule.ConditionList.Condition;\r\n    if (conditions.length > 3) {\r\n        conditions = conditions.slice(0, 2);\r\n        conditions.push('...');\r\n    }\r\n    const enrollmentCount = ('EnrollmentInfo' in study.ProtocolSection.DesignModule) ? study.ProtocolSection.DesignModule.EnrollmentInfo.EnrollmentCount : 'Not Specified';\r\n    let locations = ('ContactsLocationsModule' in study.ProtocolSection && 'LocationList' in study.ProtocolSection.ContactsLocationsModule) ? study.ProtocolSection.ContactsLocationsModule.LocationList.Location : 'No Data';\r\n    if (locations !== 'No Data' && locations.length > 3) {\r\n        locations = locations.slice(0, 2);\r\n        locations.push({LocationFacility: '...'});\r\n    }\r\n\r\n    let status = study.ProtocolSection.StatusModule.OverallStatus;\r\n    status = status === 'Recruiting' ? 'Recruiting' : status === 'Completed' ? 'Completed' : 'Not Recruiting';\r\n\r\n    const handleFavClick = (favourite, NCTId) => {\r\n        if (favourite) {\r\n            let fav = JSON.parse(localStorage.getItem('favourite')) || [];\r\n            if (fav.indexOf(NCTId) < 0) fav.push(NCTId);\r\n            localStorage.setItem('favourite', JSON.stringify(fav));\r\n        } else {\r\n            let fav = JSON.parse(localStorage.getItem('favourite')) || [];\r\n            if (fav.indexOf(NCTId) >= 0) fav.splice(fav.indexOf(NCTId), 1);\r\n            localStorage.setItem('favourite', JSON.stringify(fav));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <tr className=\"table-card\" key={NCTId}>\r\n            <td className=\"table-serial\">\r\n                <span>{index + 1}.</span>\r\n            </td>\r\n            <td className=\"table-content\">\r\n            <span><a data-toggle=\"modal\" href={`#slide-in-${NCTId}`}>{protocolTitle}</a></span>\r\n            <br/>\r\n            <div className=\"table-content-info\">\r\n                <table className=\"table table-borderless table-sm\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Study Type:</td>\r\n                            <td>{studyType}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>{conditions.length > 1 ? 'Target Conditions:' : 'Target Condition:'}</td>\r\n                            <td>{conditions.map(condition => <p>{condition}</p>)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Healthy Volunteers:</td>\r\n                            <td>{healthyVolunteer === 'No' ? 'No' : 'Yes'}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Target Enrolment:</td>\r\n                            <td>{enrollmentCount !== 'Not Specified' ? `${enrollmentCount} participants` : `${enrollmentCount}`}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>{locations.length > 1 ? 'Locations:' : 'Location:'}</td>\r\n                            <td>{locations !== 'No Data' ? locations.map(location => <p>{location.LocationFacility}{location.LocationFacility !== '...' && ','} {location.LocationCountry}</p>) : <p>No Data</p>}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            {/* bottom row */}\r\n            <div className=\"table-content-more\">\r\n                <FavButton handleClick={handleFavClick} NCTId={NCTId} />\r\n                <ButtonStatus status={status}/>\r\n            </div>\r\n            </td>\r\n\r\n            <SlideIn study={study}/>\r\n        </tr>\r\n    )\r\n}\r\nCard.propTypes = {\r\n    study: PropTypes.object.isRequired,\r\n    index: PropTypes.number.isRequired\r\n}\r\n\r\nconst ButtonStatus = ({ status }) => {\r\n    return <span className={`status-badge ${status === 'Recruiting' ? 'status-active' : status === 'Completed' ? 'status-completed' : 'status-inactive'}`}>{status}</span>\r\n}\r\n\r\nexport { Card, ButtonStatus };","import React from 'react';\r\nimport { ButtonStatus } from './Card.js'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst SlideIn = ({ study }) => {\r\n    const NCTId = study.ProtocolSection.IdentificationModule.NCTId\r\n    const lastUpdate = study.ProtocolSection.StatusModule.LastUpdateSubmitDate;\r\n    const protocolTitle = study.ProtocolSection.IdentificationModule.OfficialTitle;\r\n    const briefSummary = study.ProtocolSection.DescriptionModule.BriefSummary;\r\n    const primaryPurpose = ('DesignInfo' in study.ProtocolSection.DesignModule && 'DesignPrimaryPurpose' in study.ProtocolSection.DesignModule.DesignInfo) ? study.ProtocolSection.DesignModule.DesignInfo.DesignPrimaryPurpose : 'No Data';\r\n    const studyType = study.ProtocolSection.DesignModule.StudyType;\r\n    const interventionDetails = studyType === 'Interventional' ? study.ProtocolSection.ArmsInterventionsModule.InterventionList.Intervention : 'Not Applicable';\r\n    const phase = studyType === 'Interventional' ? study.ProtocolSection.DesignModule.PhaseList.Phase : 'Not Applicable';\r\n    const biospec = ('BioSpec' in study.ProtocolSection.DesignModule) ? study.ProtocolSection.DesignModule.BioSpec.BioSpecDescription : 'Not Applicable';\r\n    const conditions = study.ProtocolSection.ConditionsModule.ConditionList.Condition;\r\n    const enrollmentCount = ('EnrollmentInfo' in study.ProtocolSection.DesignModule) ? study.ProtocolSection.DesignModule.EnrollmentInfo.EnrollmentCount : 'Not Specified';\r\n    const locations = ('ContactsLocationsModule' in study.ProtocolSection && 'LocationList' in study.ProtocolSection.ContactsLocationsModule) ? study.ProtocolSection.ContactsLocationsModule.LocationList.Location : 'No Data';\r\n    let status = study.ProtocolSection.StatusModule.OverallStatus;\r\n    status = status === 'Recruiting' ? 'Recruiting' : status === 'Completed' ? 'Completed' : 'Not Recruiting';\r\n    const healthyVolunteer = study.ProtocolSection.EligibilityModule.HealthyVolunteers;\r\n    const gender = study.ProtocolSection.EligibilityModule.Gender;\r\n    const minAge = study.ProtocolSection.EligibilityModule.MinimumAge;\r\n    const maxAge = ('MaximumAge' in study.ProtocolSection.EligibilityModule) ? study.ProtocolSection.EligibilityModule.MaximumAge : 'No Data';\r\n    const criteria = study.ProtocolSection.EligibilityModule.EligibilityCriteria.split('\\n').filter(item => item !== '');\r\n    \r\n    let recipientList = [];\r\n    if ('ContactsLocationsModule' in study.ProtocolSection) {\r\n        if ('CentralContactList' in study.ProtocolSection.ContactsLocationsModule) {\r\n            study.ProtocolSection.ContactsLocationsModule.CentralContactList.CentralContact.forEach(item => {\r\n                item.CentralContactRole === 'Contact' && recipientList.push([item.CentralContactName, item.CentralContactEMail]);\r\n            })\r\n        } else if ('LocationList' in study.ProtocolSection.ContactsLocationsModule) {\r\n            study.ProtocolSection.ContactsLocationsModule.LocationList.Location.forEach(item => {\r\n                ('LocationContactList' in item) && item.LocationContactList.LocationContact.forEach(item => {\r\n                    item.LocationContactRole === 'Contact' && recipientList.push([item.LocationContactName, item.LocationContactEMail]);\r\n                })\r\n            })\r\n        }\r\n    }\r\n    // if (recipientList.length === 0) {recipientList.push(['No Data', 'No Data'])};\r\n    \r\n\r\n    return (\r\n        <div className=\"modal fade\" key={NCTId} id={`slide-in-${NCTId}`} tabIndex=\"-1\" role=\"dialog\" aria-labelledby={`slide-in-${NCTId}`} aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-dialog-slideout modal-lg\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <div>\r\n                            <h5 className=\"modal-title\">Study ID: {NCTId}</h5>\r\n                            {/* <h5 classname=\"modal-title\">Last Updated on {lastUpdate}</h5> */}\r\n                            <div className=\"modal-title-status\">\r\n                                <ButtonStatus status={status}/>\r\n                                &nbsp;\r\n                                <span>Last Update: {lastUpdate}</span>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">×</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <div>\r\n                            <h6 className=\"font-weight-bold\">Protocol Title:</h6>\r\n                            <span>{protocolTitle}</span>\r\n                        </div>\r\n                        <br/>\r\n                        <div>\r\n                            <h6 className=\"font-weight-bold\">Study Summary:</h6>\r\n                            <span>{briefSummary}</span>\r\n                        </div>\r\n                        <br/>\r\n                        <div>\r\n    <h6 className=\"font-weight-bold\">Study Type {studyType === 'Interventional' && <ButtonInfo content={'An interventional trial is a type of clinical study in which participants are assigned to groups that receive one or more intervention/treatment (or no intervention) so that researchers can evaluate the effects of the interventions on biomedical or health-related outcomes.'} />}{studyType === 'Observational' && <ButtonInfo content={'An observational trial is a type of clinical study in which participants are identified as belonging to study groups and are assessed for biomedical or health outcomes. A patient registry is a type of observational study.'} />} :</h6>\r\n                            <span>{studyType} trial</span>\r\n                        </div>\r\n                        <br/>\r\n                        {studyType === 'Interventional' && \r\n                        (\r\n                            <div>\r\n                                <div>\r\n                                    <h6 className=\"font-weight-bold\">Intervention Arms Involved <ButtonInfo content={'A group or subgroup of participants in a clinical trial that receives a specific intervention/treatment, or no intervention, according to the trial\\'s protocol.'} /> :</h6>\r\n                                    <table className=\"table table-borderless table-sm\">\r\n                                    {interventionDetails.map((intervention, index) => {\r\n                                        return (\r\n                                            <div>\r\n                                                <tr>\r\n                                                    <td className=\"modal-intervention-top\">{index + 1}.</td>\r\n                                                    <td className=\"modal-intervention-top\">{intervention.InterventionName}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"modal-intervention-bottom\"></td>\r\n                                                    <td className=\"modal-intervention-bottom\">{intervention.InterventionDescription}</td>\r\n                                                </tr>\r\n                                            </div>\r\n                                        )      \r\n                                    })}\r\n                                    </table>\r\n                                    \r\n                                </div>\r\n                                <br/>\r\n                                {primaryPurpose !== 'No Data' &&\r\n                                    (\r\n                                        <div>\r\n                                            <div>\r\n                                                <h6 className=\"font-weight-bold\">Primary Purpose <ButtonInfo content={'The main reason for the clinical trial. The types of primary purpose are: treatment, prevention, diagnostic, supportive care, screening, health services research, basic science, and other.'} /> :</h6>\r\n                                                <span>{primaryPurpose}</span>\r\n                                            </div>\r\n                                            <br/>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                \r\n                                <div>\r\n                                    <h6 className=\"font-weight-bold\">Study Phase <ButtonInfo content={'The stage of a clinical trial studying a drug or biological product, based on definitions developed by the U.S. Food and Drug Administration (FDA). The phase is based on the study\\'s objective, the number of participants, and other characteristics. There are five phases: Early Phase 1 (formerly listed as Phase 0), Phase 1, Phase 2, Phase 3, and Phase 4. Not Applicable is used to describe trials without FDA-defined phases, including trials of devices or behavioral interventions.'} /> :</h6>\r\n                                    <span>{phase}</span>\r\n                                </div>\r\n                                <br/>\r\n                            </div>\r\n                        )}\r\n                        {biospec !== 'Not Applicable' && \r\n                        (\r\n                            <div>\r\n                                <div>\r\n                                    <h6 className=\"font-weight-bold\">Biospecimens Involved:</h6>\r\n                                    <span>{biospec}</span>\r\n                                </div>\r\n                                <br/>\r\n                            </div>\r\n                        )} \r\n                        <div>\r\n                        <h6 className=\"font-weight-bold\">{conditions.length > 1 ? 'Target Conditions' : 'Target Condition'} <ButtonInfo content=\"The disease, disorder, syndrome, illness, or injury that is being studied.\" /> :</h6>\r\n                            {conditions.map(condition => <p>{condition}</p>)}\r\n                        </div>\r\n                        <br/>\r\n                        <div>\r\n                            <h6 className=\"font-weight-bold\">Target Enrolment <ButtonInfo content=\"Number of participants that the researchers need for this study.\"/> :</h6>\r\n                            <span>{enrollmentCount !== 'Not Specified' ? `${enrollmentCount} participants` : `${enrollmentCount}`}</span>\r\n                        </div>\r\n                        <br/>\r\n                        <div>\r\n                            <h6 className=\"font-weight-bold\">Study Locations <ButtonInfo content={'Locations that are currently conducting this study. You may specify your preferred location during your application.'}/> :</h6>\r\n                            {locations !== 'No Data' ? locations.map(location => <p>{location.LocationFacility}, {location.LocationCountry}</p>) : <p>No Data</p>}\r\n                        </div>\r\n                        <br/>\r\n\r\n                        <div>\r\n                            <hr/>\r\n                                <h6 className=\"font-weight-bold\">Eligibility Criteria:</h6>\r\n                            <hr/>\r\n                            <div>\r\n                                <h6 className=\"font-weight-bold\">Gender:</h6>\r\n                                <span>{gender}</span>\r\n                            </div>\r\n                            <br/>\r\n                            <div>\r\n                                {maxAge !== 'No Data' ? <h6 className=\"font-weight-bold\">Age Group:</h6> : <h6 className=\"font-weight-bold\">Minimum Age:</h6>}\r\n                                {/* <h6 className=\"font-weight-bold\">Age Group:</h6> */}\r\n                                {maxAge !== 'No Data' ?\r\n                                    <span>{minAge} to {maxAge}</span> :\r\n                                    <span>{minAge}</span>\r\n                                }\r\n                            </div>\r\n                            <br/>\r\n                            <div>\r\n                                <h6 className=\"font-weight-bold\">Accepts Healthy Volunteer:</h6>\r\n                                <span>{healthyVolunteer === 'No' ? 'No' : 'Yes'}</span>\r\n                            </div>\r\n                            <br/>\r\n                            <table className=\"table table-borderless table-sm\">\r\n                                {criteria.map((item) => {\r\n                                    return (\r\n                                        (item.toLowerCase() === 'inclusion criteria:') ?\r\n                                        <tr>\r\n                                            <td colspan=\"2\" className=\"font-weight-bold modal-inclusion-criteria\">Inclusion Criteria <ButtonInfo content={'A type of eligibility criteria. These are the reasons that a person is ALLOWED to participate in a clinical study.'} /> :</td>\r\n                                        </tr> :\r\n                                        (item.toLowerCase() === 'exclusion criteria:') ?\r\n                                        <tr>\r\n                                            <td colspan=\"2\" className=\"font-weight-bold modal-exclusion-criteria\">Exclusion Criteria <ButtonInfo content={'A type of eligibility criteria. These are reasons that a person is NOT ALLOWED to participate in a clinical study.'} /> :</td>\r\n                                        </tr> :\r\n                                        <tr>\r\n                                            <td>&bull;</td>\r\n                                            <td>{item[0] !== item[0].toUpperCase() ? item.replace(item[0], item[0].toUpperCase()) : item}</td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </table>\r\n                        </div>\r\n                        <br/>\r\n                        \r\n                        <form className=\"border p-3\">\r\n                            <div className=\"form-check\" data-toggle=\"collapse\" data-target={`#form-${NCTId}`}>\r\n                                <label className=\"form-check-label\">\r\n                                    <input type=\"checkbox\" class=\"form-check-input\" value=\"\" />I have read the information above and acknowledge that I fulfill all eligibility criteria to the best of my knowledge. I agree to be contacted by the study team for further screening and participation in this study.\r\n                                </label>\r\n                            </div>\r\n                            <div id={`form-${NCTId}`} className=\"collapse text-center\">\r\n                                <input required type=\"text\" className=\"form-control form-control mt-3\" placeholder=\"Name\" name=\"name\"/>\r\n                                <input required type=\"email\" className=\"form-control form-control mt-3\" placeholder=\"Email\" name=\"email\"/>\r\n                                <input required type=\"tel\" className=\"form-control form-control mt-3\" placeholder=\"Contact No.\" name=\"contactNo\"/>\r\n                                <textarea className=\"form-control\" placeholder=\"Remarks\" rows=\"3\"></textarea>\r\n                                <hr/>\r\n                                {recipientList.map((item, index) => {\r\n                                    return (\r\n                                    <div>\r\n                                        <h6 className=\"font-weight-bold text-left\">Recipient {index + 1}:</h6>\r\n                                        <div className=\"input-group\">\r\n                                            <input type=\"text\" className=\"form-control\" value={item[0]} disabled/>\r\n                                        </div>\r\n                                        <div className=\"input-group\">\r\n                                            <input type=\"text\" className=\"form-control\" value={item[1]} disabled/>\r\n                                        </div>\r\n                                        <br/>\r\n                                    </div>\r\n                                    )\r\n                                })}\r\n                                <button type=\"button\" className=\"btn btn-primary\">Send to Study Team</button>\r\n                            </div>\r\n                        </form>\r\n\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                        {/* <button type=\"button\" className=\"btn btn-primary\">Apply</button> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const ButtonInfo = ({ content }) => {\r\n    return (\r\n        <Tooltip title={content} arrow>\r\n            <i className=\"fa fa-info-circle\"></i>\r\n        </Tooltip>\r\n    )\r\n}\r\n\r\nexport default SlideIn;","import React from 'react';\r\n\r\nclass SearchStudy extends React.Component {\r\n    state = {\r\n        value: '',\r\n    }\r\n\r\n    timeout = null;\r\n\r\n    doSearch = (event) => {\r\n        this.setState({\r\n            value: event.target.value\r\n        })\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout(() => {\r\n           this.props.handleStudySearch(this.state.value);\r\n        }, 750);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                id=\"search-study\"\r\n                type=\"text\"\r\n                placeholder=\"\"\r\n                onChange={this.doSearch}\r\n                value={this.state.value}\r\n            ></input> \r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchStudy;","import React from 'react';\r\n\r\nclass SearchLocation extends React.Component {\r\n    state = {\r\n        value: '',\r\n    }\r\n\r\n    timeout = null;\r\n\r\n    doSearch = (event) => {\r\n        this.setState({\r\n            value: event.target.value\r\n        })\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout(() => {\r\n           this.props.handleLocationSearch(this.state.value);\r\n        }, 750);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                id=\"search-location\"\r\n                type=\"text\"\r\n                placeholder=\"\"\r\n                onChange={this.doSearch}\r\n                value={this.state.value}\r\n            ></input> \r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchLocation;","import React from 'react';\r\nimport { ButtonInfo } from './SlideIn.js';\r\n\r\nclass CheckRecruiting extends React.Component {\r\n    state = {\r\n        checked: false\r\n    }\r\n\r\n    timeout = null;\r\n\r\n    toggleSwitch = () => {\r\n        this.setState({\r\n            checked: !this.state.checked\r\n        })\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout(() => {\r\n            this.props.handleClick(this.state.checked);\r\n         }, 100);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-check form-check-inline\">\r\n                <input \r\n                    onChange={this.toggleSwitch} \r\n                    className=\"form-check-input\" \r\n                    type=\"checkbox\" \r\n                    id={this.props.id} \r\n                    value=\"\" \r\n                    checked={this.state.checked} \r\n                />\r\n                <label className=\"form-check-label\" for=\"inlineCheckbox1\">{this.props.name} {this.props.tooltip && <ButtonInfo content={this.props.tooltip} />} </label>\r\n            </div>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default CheckRecruiting;","import React from 'react';\r\nimport { ButtonInfo } from './SlideIn.js';\r\nimport SearchStudy from './SearchStudy.js';\r\nimport SearchLocation from './SearchLocation.js';\r\nimport CheckBoxFilters from './CheckBoxFilters';\r\n// import TextFilters from './TextFilters.js';\r\n\r\nconst Filters = ({ handleStudySearch, handleLocationSearch, handleRecruitingClick, handleTypeClick, handleVolunteersClick, handleGenderClick, handleAgeGroupClick }) => {\r\n    return (\r\n        <div className=\"modal fade\" key=\"filters\" id=\"filters\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"filters\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-dialog-slideout\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\">Filters</h5>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">×</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <form className=\"\">\r\n                            <div>\r\n                                <h6>Study Keyword <ButtonInfo content={'Narrow down your search by providing part of the study name or protocol title.'}/> :</h6>\r\n                                <SearchStudy handleStudySearch={handleStudySearch} />\r\n                            </div>\r\n                            <br/>\r\n                            <div>\r\n                                <h6>Location Keyword <ButtonInfo content={'Narrow down your search by providing desired location of study (e.g. Singapore General Hospital).'} /> :</h6>\r\n                                <SearchLocation handleLocationSearch={handleLocationSearch} />\r\n                            </div>\r\n                            <br/>\r\n                            <div>\r\n                                <h6>Recruitment Status:</h6>\r\n                                <CheckBoxFilters handleClick={handleRecruitingClick} id={'status-recruiting'} name={'Recruiting'} />\r\n                                <CheckBoxFilters handleClick={handleRecruitingClick} id={'status-not-recruiting'} name={'Not Recruiting'} />\r\n                            </div>\r\n                            <br/>\r\n                            <div>\r\n                                <h6>Study Type:</h6>\r\n                                <CheckBoxFilters handleClick={handleTypeClick} id={'type-interventional'} name={'Interventional'} tooltip={'Also known as clinical trials. Participants are assigned to groups that receive one or more intervention/treatment (or no intervention) so that researchers can evaluate the effects of the interventions on biomedical or health-related outcomes.'}/>\r\n                                <CheckBoxFilters handleClick={handleTypeClick} id={'type-observational'} name={'Observational'} tooltip={'A type of clinical study in which participants are identified as belonging to study groups and are assessed for biomedical or health outcomes. A patient registry is a kind of observational study.'} />\r\n                            </div>\r\n                            <br/>\r\n                            <div>\r\n                                <h6>Accepts Healthy Volunteers:</h6>\r\n                                <CheckBoxFilters handleClick={handleVolunteersClick} id={'healthy-volunteers-yes'} name={'Yes'} />\r\n                                <CheckBoxFilters handleClick={handleVolunteersClick} id={'healthy-volunteers-no'} name={'No'} />\r\n                            </div>\r\n                            <br/>\r\n                            <div>\r\n                                <h6>Gender:</h6>\r\n                                <CheckBoxFilters handleClick={handleGenderClick} id={'gender-male'} name={'Male Only'} />\r\n                                <CheckBoxFilters handleClick={handleGenderClick} id={'gender-female'} name={'Female Only'} />\r\n                            </div>\r\n                            <br/>\r\n                            <div>\r\n                                <h6>Age Groups:</h6>\r\n                                <CheckBoxFilters handleClick={handleAgeGroupClick} id={'age-child'} name={'Child (Birth-17)'} />\r\n                                <CheckBoxFilters handleClick={handleAgeGroupClick} id={'age-adult'} name={'Adult (18-64)'}/>\r\n                                <CheckBoxFilters handleClick={handleAgeGroupClick} id={'age-old-adult'} name={'Older Adult (65+)'} />\r\n                            </div>\r\n                            <br/>\r\n                            <div>\r\n                                <h6>Country:</h6>\r\n                                <input type=\"text\" className=\"form-control\" value='Singapore' disabled />\r\n                            </div>\r\n                        </form>\r\n                                           \r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                        <button type=\"button\" onClick={() => window.location.reload()} className=\"btn btn-primary\">Clear Filters</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filters;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Filters from './Filters.js';\r\n\r\nconst Jumbotron = ({ studiesFound, loading, handleStudySearch, handleLocationSearch, handleRecruitingClick, handleTypeClick, handleVolunteersClick, handleGenderClick, handleAgeGroupClick }) => {\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n            <div className=\"container\">\r\n                <div className=\"breadcrumbs\">{loading ? 'Connecting to ClinicalTrials.gov database...' : 'Data Sourced from ClinicalTrials.gov'}</div>\r\n                <h1 className=\"title\">{loading ? 'Searching for Studies...' : `${studiesFound.toLocaleString()} ${studiesFound > 1 ? 'Studies' : 'Study'} Found`}</h1>\r\n                <div>\r\n                    <button className=\"btn btn-primary\" type=\"button\" data-toggle=\"modal\" data-target=\"#filters\"><i className=\"fa fa-filter\"></i> Filters</button>\r\n                </div>\r\n                <Filters \r\n                    handleStudySearch={handleStudySearch}\r\n                    handleLocationSearch={handleLocationSearch}\r\n                    handleRecruitingClick={handleRecruitingClick}\r\n                    handleTypeClick={handleTypeClick}\r\n                    handleVolunteersClick={handleVolunteersClick}\r\n                    handleGenderClick={handleGenderClick}\r\n                    handleAgeGroupClick={handleAgeGroupClick}\r\n                />\r\n            </div>\r\n      </div>\r\n    )\r\n}\r\nJumbotron.propTypes = {\r\n    studiesFound: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Jumbotron;","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loader\"></div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nconst LoadMoreBtn = ({ handleClick }) => {\r\n    return (\r\n        <div class=\"row\">\r\n            <div class=\"col text-center\">\r\n                <button onClick={handleClick} className=\"btn btn-primary mt-4 mb-5\">Fetch More Records</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadMoreBtn;","import React from \"react\";\nimport \"./BrowseTrials.css\";\nimport Navbar from \"./Navbar.js\";\nimport Jumbotron from \"./Jumbotron.js\";\nimport Spinner from './Spinner.js';\nimport LoadMoreBtn from './LoadMoreBtn.js';\nimport ScrollUpButton from \"react-scroll-up-button\";\nimport { Card } from \"./Card.js\";\nimport { record_size } from \"./configuration.js\";\n\nclass App extends React.Component {\n  state = {\n    loading: true,\n    min_rnk: 1,\n    max_rnk: record_size,\n    ConditionSearch: '',\n    OfficialTitle: '',\n    LocationSearch: '',\n    OverallStatus: '',\n    StudyType: '',\n    HealthyVolunteers: '',\n    Gender: '',\n    StdAge: '',\n    LocationCountry: 'Singapore',\n    NCTId: '',\n    studiesFound: 0,\n    trials: []\n  }\n\n  apiGenerator() {\n    const api_base_url = 'https://clinicaltrials.gov/api/query/full_studies?';\n    const keyPrefix = 'AREA%5B';\n    const keySuffix = '%5D';\n    const exprPrefix = '%28';\n    const exprSuffix = '%29';\n    let expr = '';\n    for (let key in this.state) {\n      if (key[0] === key[0].toUpperCase() && this.state[key] !== '' && key !== 'NCTId') {\n        if (key === 'OverallStatus') {\n          expr += `${keyPrefix}${key}${keySuffix}COVERAGE%5BFullMatch%5D${exprPrefix}${this.state[key]}${exprSuffix}+AND+`; // special handling to filter out terms like 'not yet recruiting'\n        } \n        else {\n        expr += `${keyPrefix}${key}${keySuffix}${exprPrefix}${this.state[key]}${exprSuffix}+AND+`;\n        }\n      }\n    }\n    if (expr.length > 0) expr = expr.substr(0, expr.length - 5); //remove final '+AND+'\n    return `${api_base_url}&expr=${expr}&min_rnk=${this.state.min_rnk}&max_rnk=${this.state.max_rnk}&fmt=json`;\n  }\n\n  fetchItems = (api_url) => {\n    let fav = JSON.parse(localStorage.getItem(\"favourite\")) || [];\n    fetch(api_url)\n    .then(res => res.json())\n    .then(res => {\n      this.setState({\n        loading: false,\n        studiesFound: res.FullStudiesResponse.NStudiesFound,\n        trials: res.FullStudiesResponse.FullStudies,\n        NCTId: fav\n      })\n    })\n  }\n  \n  componentDidMount() {\n    let api_url = this.apiGenerator();\n    this.fetchItems(api_url);\n  }\n\n  handleConditionSearch = (searchTerm) => {\n    this.setState({\n      loading: true,\n      ConditionSearch: searchTerm,\n      min_rnk: 1,\n      max_rnk: record_size,\n      trials: []\n    })\n    let api_url = this.apiGenerator();\n    this.fetchItems(api_url);\n  }\n\n  handleStudySearch = (searchTerm) => {\n    this.setState({\n      loading: true,\n      OfficialTitle: searchTerm,\n      min_rnk: 1,\n      max_rnk: record_size,\n      trials: []\n    })\n    let api_url = this.apiGenerator();\n    this.fetchItems(api_url);\n  }\n\n  handleLocationSearch = (searchTerm) => {\n    this.setState({\n      loading: true,\n      LocationSearch: searchTerm,\n      min_rnk: 1,\n      max_rnk: record_size,\n      trials: []\n    })\n    let api_url = this.apiGenerator();\n    this.fetchItems(api_url);\n  }\n\n  getOverallStatus = () => {\n    const recruitingStatus = document.getElementById('status-recruiting');\n    const notRecruitingStatus = document.getElementById('status-not-recruiting');\n    let result = [];\n    recruitingStatus.checked && result.push('Recruiting');\n    notRecruitingStatus.checked && result.push('NOT Recruiting');\n    return result.join('+OR+');\n  }\n\n  handleRecruitingClick = () => {\n    const overallStatus = this.getOverallStatus();\n    this.setState({\n      loading: true,\n      OverallStatus: overallStatus,\n      min_rnk: 1,\n      max_rnk: record_size,\n      trials: []\n    })\n    let api_url = this.apiGenerator();\n    this.fetchItems(api_url);\n  }\n\n  getStudyType = () => {\n    const interventionalType = document.getElementById('type-interventional');\n    const observationalType = document.getElementById('type-observational');\n    let result = [];\n    interventionalType.checked && result.push('Interventional');\n    observationalType.checked && result.push('Observational');\n    if (result.length === 2) result = []; // include both types if both checkboxes are selected\n    return result.join('+OR+');\n  }\n\n  handleTypeClick = () => {\n    const studyType = this.getStudyType();\n    this.setState({\n      loading: true,\n      StudyType: studyType,\n      min_rnk: 1,\n      max_rnk: record_size,\n      trials: []\n    })\n    let api_url = this.apiGenerator();\n    this.fetchItems(api_url);\n  }\n\n  getHealthyVolunteers = () => {\n    const volunteersYes = document.getElementById('healthy-volunteers-yes');\n    const volunteersNo = document.getElementById('healthy-volunteers-no');\n    let result = [];\n    volunteersYes.checked && result.push('Accepts Healthy Volunteers');\n    volunteersNo.checked && result.push('NOT Accept Healthy Volunteers');\n    return result.join('+OR+');\n  }\n\n  handleVolunteersClick = () => {\n    const healthyVolunteers = this.getHealthyVolunteers();\n    this.setState({\n      loading: true,\n      HealthyVolunteers: healthyVolunteers,\n      min_rnk: 1,\n      max_rnk: record_size,\n      trials: []\n    })\n    let api_url = this.apiGenerator();\n    this.fetchItems(api_url);\n  }\n\n  getGenders = () => {\n    const genderMale = document.getElementById('gender-male');\n    const genderFemale = document.getElementById('gender-female');\n    let result = [];\n    genderMale.checked && result.push('Male');\n    genderFemale.checked && result.push('Female');\n    if (result.length === 2) result = []; // include both genders if both checkboxes are selected\n    return result.join('+OR+');\n  }\n\n  handleGenderClick = () => {\n    const gender = this.getGenders();\n    this.setState({\n      loading: true,\n      Gender: gender,\n      min_rnk: 1,\n      max_rnk: record_size,\n      trials: []\n    })\n    let api_url = this.apiGenerator();\n    this.fetchItems(api_url);\n  }\n\n  getAgeGroups = () => {\n    const ageChild = document.getElementById('age-child');\n    const ageAdult = document.getElementById('age-adult');\n    const ageOldAdult = document.getElementById('age-old-adult');\n    let result = [];\n    ageChild.checked && result.push('Child');\n    ageAdult.checked && result.push('Adult');\n    ageOldAdult.checked && result.push('Older Adult');\n    if (result.length === 3) result = []; // include all age groups if all checkboxes are selected\n    return result.join('+OR+');\n  }\n\n  handleAgeGroupClick = () => {\n    const ageGroup = this.getAgeGroups();\n    this.setState({\n      loading: true,\n      StdAge: ageGroup,\n      min_rnk: 1,\n      max_rnk: record_size,\n      trials: []\n    })\n    let api_url = this.apiGenerator();\n    this.fetchItems(api_url);\n  }\n\n  loadMoreItems = () => {\n    this.setState({ \n      loading: true,\n      min_rnk: this.state.min_rnk + record_size,\n      max_rnk: this.state.max_rnk + record_size,\n    });\n\n    this.timeout = setTimeout(() => {\n      if (this.state.min_rnk <= this.state.studiesFound) {\n        let api_url = this.apiGenerator();\n        fetch(api_url)\n        .then(res => res.json())\n        .then(res => {\n          this.setState((state) => ({\n            loading: false,\n            trials: [...state.trials, ...res.FullStudiesResponse.FullStudies]\n          }))\n        })\n      } else {\n        this.setState({\n          loading: false\n        })\n        alert('All records shown');\n      }\n    }, 750);  \n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid p-0\">\n        <ScrollUpButton\n          ContainerClassName=\"AnyClassForContainer\"\n          TransitionClassName=\"AnyClassForTransition\"\n        />\n        <Navbar handleConditionSearch={this.handleConditionSearch} favCount={this.state.NCTId.length} />\n        <Jumbotron \n          studiesFound={this.state.studiesFound} \n          loading={this.state.loading}\n          handleConditionSearch={this.handleConditionSearch}\n          handleStudySearch={this.handleStudySearch}\n          handleLocationSearch={this.handleLocationSearch}\n          handleRecruitingClick={this.handleRecruitingClick}\n          handleTypeClick={this.handleTypeClick}\n          handleVolunteersClick={this.handleVolunteersClick}\n          handleGenderClick={this.handleGenderClick}\n          handleAgeGroupClick={this.handleAgeGroupClick}\n          />\n        {this.state.trials !== undefined ? \n        <div className=\"container\">\n          <div className=\"row\">\n            <div className={`border content ${(this.state.loading && this.state.min_rnk === 1) && \"content-loading\"}`}>\n              <table className=\"table\">\n                <tbody>\n                  {this.state.trials\n                    .filter(trial => trial.Study.ProtocolSection.StatusModule.OverallStatus !== \"Withheld\")\n                    .map((trial, i) => <Card study={trial.Study} index={i} />)\n                  }\n                </tbody>\n              </table>\n            </div>\n  \n            {/* sidebar */}\n            <div>{/* to render sidebar here */}</div>\n          </div>\n          {this.state.loading ? <Spinner /> : (this.state.studiesFound > this.state.max_rnk) ? <LoadMoreBtn handleClick={this.loadMoreItems} /> : <div className=\"container text-center mt-4 mb-5\"><span>All records shown</span></div>}\n        </div>\n        :\n        <div className=\"container text-center not-found\">\n          <img src={require(`./not-found.jpg`)} alt=\"not-found\" />\n          <br/>\n          <span>No data found</span>\n          <br/>\n          <span>Please try a different search criteria</span>\n        </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export const record_size = 10;","import React from \"react\";\r\nimport \"./BrowseTrials.css\";\r\nimport Navbar from \"./Navbar.js\";\r\nimport Jumbotron from \"./Jumbotron.js\";\r\nimport Spinner from \"./Spinner.js\";\r\nimport LoadMoreBtn from \"./LoadMoreBtn.js\";\r\nimport ScrollUpButton from \"react-scroll-up-button\";\r\nimport { Card } from \"./Card.js\";\r\nimport { record_size } from \"./configuration.js\";\r\n\r\nclass BrowseFavourites extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    min_rnk: 1,\r\n    max_rnk: record_size,\r\n    ConditionSearch: \"\",\r\n    OfficialTitle: \"\",\r\n    LocationSearch: \"\",\r\n    OverallStatus: \"\",\r\n    StudyType: \"\",\r\n    HealthyVolunteers: \"\",\r\n    Gender: \"\",\r\n    StdAge: \"\",\r\n    LocationCountry: \"Singapore\",\r\n    NCTId: \"\",\r\n    studiesFound: 0,\r\n    trials: [],\r\n  };\r\n\r\n  apiGenerator() {\r\n    const api_base_url = \"https://clinicaltrials.gov/api/query/full_studies?\";\r\n    const keyPrefix = \"AREA%5B\";\r\n    const keySuffix = \"%5D\";\r\n    const exprPrefix = \"%28\";\r\n    const exprSuffix = \"%29\";\r\n    let expr = \"\";\r\n    for (let key in this.state) {\r\n      if (key[0] === key[0].toUpperCase() && this.state[key] !== \"\") {\r\n        if (key === \"OverallStatus\") {\r\n          expr += `${keyPrefix}${key}${keySuffix}COVERAGE%5BFullMatch%5D${exprPrefix}${this.state[key]}${exprSuffix}+AND+`; // special handling to filter out terms like 'not yet recruiting'\r\n        } else if (key === \"NCTId\") {\r\n          let NCTIds = this.state[key].join(\"+OR+\");\r\n          expr += `${keyPrefix}${key}${keySuffix}${exprPrefix}${NCTIds}${exprSuffix}+AND+`; // handle favourite studies\r\n        } else {\r\n          expr += `${keyPrefix}${key}${keySuffix}${exprPrefix}${this.state[key]}${exprSuffix}+AND+`;\r\n        }\r\n      }\r\n    }\r\n    if (expr.length > 0) expr = expr.substr(0, expr.length - 5); //remove final '+AND+'\r\n    return `${api_base_url}&expr=${expr}&min_rnk=${this.state.min_rnk}&max_rnk=${this.state.max_rnk}&fmt=json`;\r\n  }\r\n\r\n  fetchItems = (api_url) => {\r\n    fetch(api_url)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        this.setState({\r\n          loading: false,\r\n          studiesFound: res.FullStudiesResponse.NStudiesFound,\r\n          trials: res.FullStudiesResponse.FullStudies,\r\n        });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let fav = JSON.parse(localStorage.getItem(\"favourite\")) || [];\r\n    if (fav.length > 0) {\r\n        this.setState({\r\n            NCTId: fav,\r\n          });\r\n      \r\n          this.timeout = setTimeout(() => {\r\n            let api_url = this.apiGenerator();\r\n            this.fetchItems(api_url);\r\n          }, 100);\r\n    } else {\r\n        this.setState({\r\n            loading: false,\r\n        })\r\n    }\r\n  }\r\n  \r\n  handleConditionSearch = (searchTerm) => {\r\n    this.setState({\r\n      loading: true,\r\n      ConditionSearch: searchTerm,\r\n      min_rnk: 1,\r\n      max_rnk: record_size,\r\n      trials: [],\r\n    });\r\n    let api_url = this.apiGenerator();\r\n    this.fetchItems(api_url);\r\n  };\r\n\r\n  handleStudySearch = (searchTerm) => {\r\n    this.setState({\r\n      loading: true,\r\n      OfficialTitle: searchTerm,\r\n      min_rnk: 1,\r\n      max_rnk: record_size,\r\n      trials: [],\r\n    });\r\n    let api_url = this.apiGenerator();\r\n    this.fetchItems(api_url);\r\n  };\r\n\r\n  handleLocationSearch = (searchTerm) => {\r\n    this.setState({\r\n      loading: true,\r\n      LocationSearch: searchTerm,\r\n      min_rnk: 1,\r\n      max_rnk: record_size,\r\n      trials: [],\r\n    });\r\n    let api_url = this.apiGenerator();\r\n    this.fetchItems(api_url);\r\n  };\r\n\r\n  getOverallStatus = () => {\r\n    const recruitingStatus = document.getElementById(\"status-recruiting\");\r\n    const notRecruitingStatus = document.getElementById(\r\n      \"status-not-recruiting\"\r\n    );\r\n    let result = [];\r\n    recruitingStatus.checked && result.push(\"Recruiting\");\r\n    notRecruitingStatus.checked && result.push(\"NOT Recruiting\");\r\n    return result.join(\"+OR+\");\r\n  };\r\n\r\n  handleRecruitingClick = () => {\r\n    const overallStatus = this.getOverallStatus();\r\n    this.setState({\r\n      loading: true,\r\n      OverallStatus: overallStatus,\r\n      min_rnk: 1,\r\n      max_rnk: record_size,\r\n      trials: [],\r\n    });\r\n    let api_url = this.apiGenerator();\r\n    this.fetchItems(api_url);\r\n  };\r\n\r\n  getStudyType = () => {\r\n    const interventionalType = document.getElementById(\"type-interventional\");\r\n    const observationalType = document.getElementById(\"type-observational\");\r\n    let result = [];\r\n    interventionalType.checked && result.push(\"Interventional\");\r\n    observationalType.checked && result.push(\"Observational\");\r\n    if (result.length === 2) result = []; // include both types if both checkboxes are selected\r\n    return result.join(\"+OR+\");\r\n  };\r\n\r\n  handleTypeClick = () => {\r\n    const studyType = this.getStudyType();\r\n    this.setState({\r\n      loading: true,\r\n      StudyType: studyType,\r\n      min_rnk: 1,\r\n      max_rnk: record_size,\r\n      trials: [],\r\n    });\r\n    let api_url = this.apiGenerator();\r\n    this.fetchItems(api_url);\r\n  };\r\n\r\n  getHealthyVolunteers = () => {\r\n    const volunteersYes = document.getElementById(\"healthy-volunteers-yes\");\r\n    const volunteersNo = document.getElementById(\"healthy-volunteers-no\");\r\n    let result = [];\r\n    volunteersYes.checked && result.push(\"Accepts Healthy Volunteers\");\r\n    volunteersNo.checked && result.push(\"NOT Accept Healthy Volunteers\");\r\n    return result.join(\"+OR+\");\r\n  };\r\n\r\n  handleVolunteersClick = () => {\r\n    const healthyVolunteers = this.getHealthyVolunteers();\r\n    this.setState({\r\n      loading: true,\r\n      HealthyVolunteers: healthyVolunteers,\r\n      min_rnk: 1,\r\n      max_rnk: record_size,\r\n      trials: [],\r\n    });\r\n    let api_url = this.apiGenerator();\r\n    this.fetchItems(api_url);\r\n  };\r\n\r\n  getGenders = () => {\r\n    const genderMale = document.getElementById(\"gender-male\");\r\n    const genderFemale = document.getElementById(\"gender-female\");\r\n    let result = [];\r\n    genderMale.checked && result.push(\"Male\");\r\n    genderFemale.checked && result.push(\"Female\");\r\n    if (result.length === 2) result = []; // include both genders if both checkboxes are selected\r\n    return result.join(\"+OR+\");\r\n  };\r\n\r\n  handleGenderClick = () => {\r\n    const gender = this.getGenders();\r\n    this.setState({\r\n      loading: true,\r\n      Gender: gender,\r\n      min_rnk: 1,\r\n      max_rnk: record_size,\r\n      trials: [],\r\n    });\r\n    let api_url = this.apiGenerator();\r\n    this.fetchItems(api_url);\r\n  };\r\n\r\n  getAgeGroups = () => {\r\n    const ageChild = document.getElementById(\"age-child\");\r\n    const ageAdult = document.getElementById(\"age-adult\");\r\n    const ageOldAdult = document.getElementById(\"age-old-adult\");\r\n    let result = [];\r\n    ageChild.checked && result.push(\"Child\");\r\n    ageAdult.checked && result.push(\"Adult\");\r\n    ageOldAdult.checked && result.push(\"Older Adult\");\r\n    if (result.length === 3) result = []; // include all age groups if all checkboxes are selected\r\n    return result.join(\"+OR+\");\r\n  };\r\n\r\n  handleAgeGroupClick = () => {\r\n    const ageGroup = this.getAgeGroups();\r\n    this.setState({\r\n      loading: true,\r\n      StdAge: ageGroup,\r\n      min_rnk: 1,\r\n      max_rnk: record_size,\r\n      trials: [],\r\n    });\r\n    let api_url = this.apiGenerator();\r\n    this.fetchItems(api_url);\r\n  };\r\n\r\n  loadMoreItems = () => {\r\n    this.setState({\r\n      loading: true,\r\n      min_rnk: this.state.min_rnk + record_size,\r\n      max_rnk: this.state.max_rnk + record_size,\r\n    });\r\n\r\n    this.timeout = setTimeout(() => {\r\n      if (this.state.min_rnk <= this.state.studiesFound) {\r\n        let api_url = this.apiGenerator();\r\n        fetch(api_url)\r\n          .then((res) => res.json())\r\n          .then((res) => {\r\n            this.setState((state) => ({\r\n              loading: false,\r\n              trials: [...state.trials, ...res.FullStudiesResponse.FullStudies],\r\n            }));\r\n          });\r\n      } else {\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n        alert(\"All records shown\");\r\n      }\r\n    }, 750);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid p-0\">\r\n        <ScrollUpButton\r\n          ContainerClassName=\"AnyClassForContainer\"\r\n          TransitionClassName=\"AnyClassForTransition\"\r\n        />\r\n        <Navbar handleConditionSearch={this.handleConditionSearch} favCount={this.state.NCTId.length} />\r\n        <Jumbotron\r\n          studiesFound={this.state.studiesFound}\r\n          loading={this.state.loading}\r\n          handleConditionSearch={this.handleConditionSearch}\r\n          handleStudySearch={this.handleStudySearch}\r\n          handleLocationSearch={this.handleLocationSearch}\r\n          handleRecruitingClick={this.handleRecruitingClick}\r\n          handleTypeClick={this.handleTypeClick}\r\n          handleVolunteersClick={this.handleVolunteersClick}\r\n          handleGenderClick={this.handleGenderClick}\r\n          handleAgeGroupClick={this.handleAgeGroupClick}\r\n        />\r\n        {this.state.trials !== undefined && this.state.NCTId.length > 0 ? (\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div\r\n                className={`border content ${\r\n                  this.state.loading &&\r\n                  this.state.min_rnk === 1 &&\r\n                  \"content-loading\"\r\n                }`}\r\n              >\r\n                <table className=\"table\">\r\n                  <tbody>\r\n                    {this.state.trials\r\n                      .filter(\r\n                        (trial) =>\r\n                          trial.Study.ProtocolSection.StatusModule\r\n                            .OverallStatus !== \"Withheld\"\r\n                      )\r\n                      .map((trial, i) => (\r\n                        <Card study={trial.Study} index={i} />\r\n                      ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n\r\n              {/* sidebar */}\r\n              <div>{/* to render sidebar here */}</div>\r\n            </div>\r\n            {this.state.loading ? (\r\n              <Spinner />\r\n            ) : this.state.studiesFound > this.state.max_rnk ? (\r\n              <LoadMoreBtn handleClick={this.loadMoreItems} />\r\n            ) : (\r\n              <div className=\"container text-center mt-4 mb-5\">\r\n                <span>All records shown</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) \r\n        :  \r\n        (\r\n          <div className=\"container text-center not-found\">\r\n            <img src={require(`./not-found.jpg`)} alt=\"not-found\" />\r\n            <br />\r\n            <span>No data found</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BrowseFavourites;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return(\r\n        <div>\r\n            <h1>404 page not found.</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport BrowseTrials from './BrowseTrials.js';\r\nimport BrowseFavourites from './BrowseFavourites.js';\r\nimport NotFound from './NotFound.js';\r\n\r\nconst App = () => {\r\n    return (\r\n        // <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        //     <React.Fragment>\r\n        //         <Switch>\r\n        <HashRouter baseline=\"/TrialGatePilot\">\r\n            <Route exact path=\"/\" component={BrowseTrials} />\r\n            <Route exact path=\"/favourites\" component={BrowseFavourites} />\r\n            <Route component={NotFound} />\r\n        </HashRouter>\r\n        //         </Switch>\r\n        //     </React.Fragment>\r\n        // </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}