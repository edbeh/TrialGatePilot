{"version":3,"sources":["images/not-found.jpg","images/logo.svg","others/configuration.js","others/common_methods/autocomplete.js","components/elements/TextFilters.js","components/elements/Navbar.js","components/elements/ButtonInfo.js","components/elements/CheckBoxFilters.js","components/elements/LocationFilters.js","components/elements/Filters.js","components/elements/Jumbotron.js","components/elements/Spinner.js","components/elements/LoadMoreBtn.js","components/elements/FavButton.js","components/elements/ButtonStatus.js","components/elements/OptInForm.js","components/elements/SlideIn.js","components/elements/Card.js","components/pages/initialState.js","components/pages/BrowseTrials.js","components/pages/BrowseFavourites.js","components/App.js","others/serviceWorker.js","index.js"],"names":["module","exports","healthcareList","autocomplete","inp","arr","callback","addEventListener","e","a","b","i","val","this","value","closeAllLists","document","createElement","setAttribute","id","parentNode","appendChild","length","toUpperCase","includes","kwIndex","indexOf","innerHTML","substr","getElementsByTagName","elmnt","x","getElementsByClassName","removeChild","target","TextFilters","handleChange","type","placeholder","loading","useState","setValue","updateState","getElementById","useEffect","fetch","then","res","json","result","reduce","elem","concat","onSubmit","event","preventDefault","className","onChange","autoComplete","disabled","onClick","Navbar","handleConditionSearch","favCount","baseline","to","src","require","alt","data-toggle","data-target","ButtonInfo","content","Tooltip","title","arrow","CheckRecruiting","handleClick","name","tooltip","checked","setChecked","timeout","clearTimeout","setTimeout","htmlFor","LocationFilters","Filters","handleStudySearch","handleLocationSearch","handleRecruitingClick","handleTypeClick","handleVolunteersClick","handleGenderClick","handleAgeGroupClick","key","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","CheckBoxFilters","window","location","reload","openFilter","click","closeFilter","history","pushState","filter","state","removeEventListener","Jumbotron","studiesFound","toLocaleString","handleCloseFilters","Spinner","LoadMoreBtn","FavButton","NCTId","favourite","setFavourite","JSON","parse","localStorage","getItem","ButtonStatus","status","OptInForm","recipientList","required","rows","map","item","index","SlideIn","study","ProtocolSection","IdentificationModule","lastUpdate","StatusModule","LastUpdateSubmitDate","protocolTitle","OfficialTitle","briefSummary","DescriptionModule","BriefSummary","primaryPurpose","DesignModule","DesignInfo","DesignPrimaryPurpose","studyType","StudyType","interventionDetails","ArmsInterventionsModule","InterventionList","Intervention","phase","PhaseList","Phase","biospec","BioSpec","BioSpecDescription","conditions","ConditionsModule","ConditionList","Condition","enrollmentCount","EnrollmentInfo","EnrollmentCount","locations","ContactsLocationsModule","LocationList","Location","OverallStatus","healthyVolunteer","EligibilityModule","HealthyVolunteers","gender","Gender","minAge","MinimumAge","maxAge","MaximumAge","criteria","EligibilityCriteria","split","CentralContactList","CentralContact","forEach","CentralContactRole","push","CentralContactName","CentralContactEMail","LocationContactList","LocationContact","LocationContactRole","LocationContactName","LocationContactEMail","intervention","Fragment","InterventionName","InterventionDescription","condition","LocationFacility","LocationCountry","toLowerCase","colSpan","replace","Card","slice","closeSlideIn","slideIn","href","locationFacility","fav","setItem","stringify","splice","initialState","min_rnk","max_rnk","ConditionSearch","LocationSearch","StdAge","trials","reducer","action","FullStudiesResponse","NStudiesFound","FullStudies","searchTerm","recruitingStatus","notRecruitingStatus","join","getRecruitingStatus","interventionalType","observationalType","getStudyType","healthyVolunteers","volunteersYes","volunteersNo","getHealthyVolunteers","genderMale","genderFemale","getGenders","ageGroup","ageChild","ageAdult","ageOldAdult","getAgeGroups","newTrials","App","useReducer","dispatch","apiGenerator","expr","base_api","fetchItems","api_url","console","log","ContainerClassName","TransitionClassName","undefined","trial","Study","BrowseFavourites","setState","getOverallStatus","overallStatus","loadMoreItems","alert","NCTIds","React","Component","exact","path","component","BrowseTrials","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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CACEpB,aAAcoD,EACdnD,KAAM,OACNlB,GAAI,eACJmB,YAAa,GACbC,QAASA,MAIf,6BACA,6BACE,4CACgB,IACd,kBAAC,EAAD,CACEiC,QACE,sGAED,IANL,KASA,yBAAKhB,UAAU,uBACb,kBAAC,EAAD,CACEpB,aAAcqD,EACdpD,KAAM,OACNlB,GAAI,kBACJmB,YAAa,GACbC,QAASA,MAIf,6BACA,6BACE,mDACA,kBAAC+D,EAAD,CACE/D,QAASA,EACTsC,YAAaa,EACbvE,GAAI,oBACJ2D,KAAM,eAER,kBAACwB,EAAD,CACE/D,QAASA,EACTsC,YAAaa,EACbvE,GAAI,wBACJ2D,KAAM,oBAGV,6BACA,6BACE,2CACA,kBAACwB,EAAD,CACE/D,QAASA,EACTsC,YAAac,EACbxE,GAAI,sBACJ2D,KAAM,iBACNC,QACE,wPAGJ,kBAACuB,EAAD,CACE/D,QAASA,EACTsC,YAAac,EACbxE,GAAI,qBACJ2D,KAAM,gBACNC,QACE,yMAIN,6BACA,6BACE,2DACA,kBAACuB,EAAD,CACE/D,QAASA,EACTsC,YAAae,EACbzE,GAAI,yBACJ2D,KAAM,QAER,kBAACwB,EAAD,CACE/D,QAASA,EACTsC,YAAae,EACbzE,GAAI,wBACJ2D,KAAM,QAGV,6BACA,6BACE,uCACA,kBAACwB,EAAD,CACE/D,QAASA,EACTsC,YAAagB,EACb1E,GAAI,cACJ2D,KAAM,cAER,kBAACwB,EAAD,CACE/D,QAASA,EACTsC,YAAagB,EACb1E,GAAI,gBACJ2D,KAAM,iBAGV,6BACA,6BACE,2CACA,kBAACwB,EAAD,CACE/D,QAASA,EACTsC,YAAaiB,EACb3E,GAAI,YACJ2D,KAAM,qBAER,kBAACwB,EAAD,CACE/D,QAASA,EACTsC,YAAaiB,EACb3E,GAAI,YACJ2D,KAAM,kBAER,kBAACwB,EAAD,CACE/D,QAASA,EACTsC,YAAaiB,EACb3E,GAAI,gBACJ2D,KAAM,uBAGV,6BACA,6BACE,wCACA,2BACEzC,KAAK,OACLmB,UAAU,eACV1C,MAAM,YACN6C,UAAQ,OAKhB,yBAAKH,UAAU,gBACb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","file":"static/js/main.0defbd56.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/not-found.3f46d8aa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.2515bf7d.svg\";","export const record_size = 10;\r\nexport const text_search_delay = 750;\r\nexport const filter_check_delay = 250;\r\n\r\n// API configuration\r\nexport const base_api = \"https://clinicaltrials.gov/api/query/full_studies?\";\r\nexport const autosuggest_base_api = \"https://clinicaltables.nlm.nih.gov/api/conditions/v3/search?terms=\";\r\n\r\n// Healthcare institutions list\r\nexport const healthcareList = [\r\n    'Alexandra Hospital',\r\n    'Thye Hua Kwan Hospital',\r\n    'Bright Vision Hospital',\r\n    'Changi General Hospital',\r\n    'Complex Medical Centre',\r\n    'Concord International Hospital',\r\n    'Farrer Park Hospital',\r\n    'Gleneagles Hospital',\r\n    'Institute of Mental Health',\r\n    'Jurong Community Hospital',\r\n    'Khoo Teck Puat Hospital',\r\n    'KK Womens and Childrens Hospital',\r\n    'Mount Alvernia Hospital',\r\n    'Mount Elizabeth Hospital',\r\n    'Mount Elizabeth Novena Hospital',\r\n    'National Heart Centre',\r\n    'Ng Teng Fong General Hospital',\r\n    'Outram Community Hospital',\r\n    'Parkway East Hospital',\r\n    'Raffles Hospital',\r\n    'Ren Ci Community Hospital',\r\n    'Sengkang Community Hospital',\r\n    'Sengkang General Hospital',\r\n    'Singapore General Hospital',\r\n    'St Andrew Community Hospital',\r\n    'St Luke Hospital',\r\n    'Tan Tock Seng Hospital',\r\n    'Thompson Medical Centre',\r\n    'Yishun Community Hospital',\r\n    'Tampines Polyclinic',\r\n    'Bukit Batok Polyclinic',\r\n    'Bedok Polyclinic',\r\n    'Bukit Merah Polyclinic',\r\n    'Choa Chu Kang Polyclinic',\r\n    'Pasir Ris Polyclinic',\r\n    'Marine Parade Polyclinic',\r\n    'Punggol Polyclinic',\r\n    'Clementi Polyclinic',\r\n    'Geylang Polyclinic',\r\n    'Hougang Polyclinic',\r\n    'Jurong Polyclinic',\r\n    'Queenstown Polyclinic',\r\n    'Pioneer Polyclinic',\r\n    'National Healthcare Group Polyclinics - Ang Mo Kio',\r\n    'National Healthcare Group Polyclinics - Geylang',\r\n    'National Healthcare Group Polyclinics - Hougang',\r\n    'National Healthcare Group Polyclinics - Toa Payoh',\r\n    'National Healthcare Group Polyclinics - Yishun',\r\n    'National Healthcare Group Polyclinics - Woodlands',\r\n]","// Got this from w3School\r\n\r\nexport const autocomplete = (inp, arr, callback) => {\r\n  /*the autocomplete function takes two arguments,\r\n    the text field element and an array of possible autocompleted values:*/\r\n  // let currentFocus;\r\n  /*execute a function when someone writes in the text field:*/\r\n  inp.addEventListener('input', function (e) {\r\n    let a,\r\n      b,\r\n      i,\r\n      val = this.value;\r\n    /*close any already open lists of autocompleted values*/\r\n    closeAllLists();\r\n    if (!val) {\r\n      return false;\r\n    }\r\n    // let currentFocus = -1;\r\n    /*create a DIV element that will contain the items (values):*/\r\n    a = document.createElement('DIV');\r\n    a.setAttribute('id', this.id + 'autocomplete-list');\r\n    a.setAttribute('class', 'autocomplete-items');\r\n    /*append the DIV element as a child of the autocomplete container:*/\r\n    this.parentNode.appendChild(a);\r\n    /*for each item in the array...*/\r\n    for (i = 0; i < arr.length; i++) {\r\n      /*check if the item starts with the same letters as the text field value:*/\r\n      // if (arr[i].substr(0, val.length).toUpperCase() === val.toUpperCase()) {\r\n      if (arr[i].toUpperCase().includes(val.toUpperCase())) {\r\n        /*create a DIV element for each matching element:*/\r\n        b = document.createElement('DIV');\r\n        /*make the matching letters bold:*/\r\n        const kwIndex = arr[i].toUpperCase().indexOf(val.toUpperCase());\r\n        b.innerHTML =\r\n          arr[i].substr(0, kwIndex) +\r\n          '<strong>' +\r\n          arr[i].substr(kwIndex, val.length) +\r\n          '</strong>' +\r\n          arr[i].substr(kwIndex + val.length);\r\n        /*insert a input field that will hold the current array item's value:*/\r\n        b.innerHTML +=\r\n          \"<input type='hidden' value='\" + arr[i] + \"' key='\" + arr[i] + \"'>\";\r\n        /*execute a function when someone clicks on the item value (DIV element):*/\r\n        b.addEventListener('click', function (e) {\r\n          /*insert the value for the autocomplete text field:*/\r\n          inp.value = this.getElementsByTagName('input')[0].value;\r\n          callback();\r\n          closeAllLists();\r\n        });\r\n        a.appendChild(b);\r\n      }\r\n    }\r\n  });\r\n\r\n  const closeAllLists = (elmnt) => {\r\n    /*close all autocomplete lists in the document,\r\n      except the one passed as an argument:*/\r\n    var x = document.getElementsByClassName('autocomplete-items');\r\n    for (var i = 0; i < x.length; i++) {\r\n      if (elmnt !== x[i] && elmnt !== inp) {\r\n        x[i].parentNode.removeChild(x[i]);\r\n      }\r\n    }\r\n  };\r\n  /*execute a function when someone clicks in the document:*/\r\n  document.addEventListener('click', function (e) {\r\n    closeAllLists(e.target);\r\n  });\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { autosuggest_base_api } from '../../others/configuration.js';\r\nimport { autocomplete } from '../../others/common_methods/autocomplete.js';\r\n\r\nconst TextFilters = ({ id, handleChange, type, placeholder, loading }) => {\r\n  const [value, setValue] = useState('');\r\n\r\n  const updateState = () => {\r\n    let value = document.getElementById(id).value;\r\n    setValue(value);\r\n    handleChange(value);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    handleChange(value);\r\n  };\r\n\r\n  const resetInput = (event) => {\r\n    event.preventDefault();\r\n    setValue('');\r\n    handleChange('');\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (value.length > 0) {\r\n      let full_url = autosuggest_base_api + value;\r\n      fetch(full_url)\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          let result = res[3].reduce((arr, elem) => arr.concat(elem[0]), []); // get list of suggestions\r\n          autocomplete(document.getElementById(id), result, updateState);\r\n        });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [value]);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className='input-group'>\r\n      <input\r\n        className='form-control input-textbox'\r\n        id={id}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        onChange={onChange}\r\n        value={value}\r\n        autoComplete='off'\r\n        disabled={loading && true}\r\n      />\r\n      {value.length > 0 && (\r\n        <div className='input-group-append'>\r\n          <span onClick={resetInput} className='btn delete-btn'>\r\n            <i className='fa fa-times'></i>\r\n          </span>\r\n        </div>\r\n      )}\r\n      <div className='input-group-append'>\r\n        <button className='btn search-btn' type='submit'>\r\n          <i className='fa fa-search'></i>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nTextFilters.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  type: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default TextFilters;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TextFilters from './TextFilters.js';\r\nimport { HashRouter, Link } from 'react-router-dom';\r\n\r\nconst Navbar = ({ handleConditionSearch, favCount, loading }) => {\r\n  return (\r\n    <div className='navigation-area'>\r\n      <nav className='navbar navbar-expand-md col-xs-12 container'>\r\n        <div>\r\n          <HashRouter baseline='/'>\r\n            <Link to='/'>\r\n              <div className='navbar-brand'>\r\n                <img src={require(`../../images/logo.svg`)} alt='logo' />\r\n                <h4>TrialGate</h4>\r\n              </div>\r\n            </Link>\r\n          </HashRouter>\r\n        </div>\r\n\r\n        <button\r\n          className='navbar-toggler'\r\n          type='button'\r\n          data-toggle='collapse'\r\n          data-target='#collapsibleNavbar'\r\n        >\r\n          <span className='font-weight-light'>MENU</span>\r\n        </button>\r\n\r\n        <div className='collapse navbar-collapse ' id='collapsibleNavbar'>\r\n          <ul className='navbar-nav'>\r\n            <li className='nav-item'>\r\n              <HashRouter baseline='/'>\r\n                <Link to='/'>\r\n                  <span className='nav-link text-center'>\r\n                    Browse All Trials\r\n                  </span>\r\n                </Link>\r\n              </HashRouter>\r\n            </li>\r\n\r\n            <li className='nav-item text-center'>\r\n              <HashRouter baseline='/'>\r\n                <Link to='/favourites'>\r\n                  <span className='nav-link'>\r\n                    My Favourites {favCount > 0 && <span> ({favCount})</span>}\r\n                  </span>\r\n                </Link>\r\n              </HashRouter>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div className='autocomplete' id='search-condition-group'>\r\n          <TextFilters\r\n            handleChange={handleConditionSearch}\r\n            placeholder={'Search Condition (e.g. COVID)'}\r\n            type={'text'}\r\n            id={'search-condition'}\r\n            loading={loading}\r\n          />\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  handleConditionSearch: PropTypes.func.isRequired,\r\n  favCount: PropTypes.number.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst ButtonInfo = ({ content }) => {\r\n  return (\r\n    <Tooltip title={content} arrow>\r\n      <i className='fa fa-info-circle'></i>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nButtonInfo.propTypes = {\r\n  content: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ButtonInfo;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ButtonInfo from './ButtonInfo.js';\r\n\r\nconst CheckRecruiting = ({ loading, handleClick, id, name, tooltip }) => {\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  let timeout = null;\r\n\r\n  const toggleSwitch = () => {\r\n    setChecked(!checked);\r\n    clearTimeout(timeout);\r\n\r\n    timeout = setTimeout(() => {\r\n      handleClick(checked);\r\n    }, 100);\r\n  };\r\n\r\n  return (\r\n    <div className='form-check form-check-inline'>\r\n      <input\r\n        onChange={toggleSwitch}\r\n        className='form-check-input'\r\n        type='checkbox'\r\n        id={id}\r\n        value=''\r\n        checked={checked}\r\n        disabled={loading && true}\r\n      />\r\n      <label className='form-check-label' htmlFor={id}>\r\n        {name} {tooltip && <ButtonInfo content={tooltip} />}{' '}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckRecruiting.propTypes = {\r\n  loading: PropTypes.bool.isRequired,\r\n  handleClick: PropTypes.func.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tooltip: PropTypes.string,\r\n};\r\n\r\nexport default CheckRecruiting;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { autocomplete } from '../../others/common_methods/autocomplete.js';\r\nimport { healthcareList } from '../../others/configuration.js';\r\n\r\nconst LocationFilters = ({ id, handleChange, type, placeholder, loading }) => {\r\n  const [value, setValue] = useState('');\r\n\r\n  const updateState = () => {\r\n    let value = document.getElementById(id).value;\r\n    setValue(value);\r\n    handleChange(value);\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    handleChange(value);\r\n  };\r\n\r\n  const resetInput = (event) => {\r\n    event.preventDefault();\r\n    setValue('');\r\n    handleChange('');\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (value.length > 0) {\r\n      autocomplete(document.getElementById(id), healthcareList, updateState);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [value]);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className='input-group'>\r\n      <input\r\n        className='form-control input-textbox'\r\n        id={id}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        onChange={onChange}\r\n        value={value}\r\n        autoComplete='off'\r\n        disabled={loading && true}\r\n      />\r\n      {value.length > 0 && (\r\n        <div className='input-group-append'>\r\n          <span onClick={resetInput} className='btn delete-btn'>\r\n            <i className='fa fa-times'></i>\r\n          </span>\r\n        </div>\r\n      )}\r\n      <div className='input-group-append'>\r\n        <button className='btn search-btn' type='submit'>\r\n          <i className='fa fa-search'></i>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nLocationFilters.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  type: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default LocationFilters;\r\n","import React from 'react';\r\nimport ButtonInfo from './ButtonInfo.js';\r\nimport CheckBoxFilters from './CheckBoxFilters';\r\nimport TextFilters from './TextFilters.js';\r\nimport LocationFilters from './LocationFilters.js';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filters = ({\r\n  loading,\r\n  handleStudySearch,\r\n  handleLocationSearch,\r\n  handleRecruitingClick,\r\n  handleTypeClick,\r\n  handleVolunteersClick,\r\n  handleGenderClick,\r\n  handleAgeGroupClick,\r\n}) => {\r\n  return (\r\n    <div\r\n      className='modal fade'\r\n      key='filters'\r\n      id='filters'\r\n      tabIndex='-1'\r\n      role='dialog'\r\n      aria-labelledby='filters'\r\n      aria-hidden='true'\r\n    >\r\n      <div className='modal-dialog modal-dialog-slideout' role='document'>\r\n        <div className='modal-content'>\r\n          <div className='modal-header'>\r\n            <h5 className='modal-title'>Filters</h5>\r\n            <button\r\n              type='button'\r\n              className='close'\r\n              data-dismiss='modal'\r\n              aria-label='Close'\r\n            >\r\n              <span aria-hidden='true'>×</span>\r\n            </button>\r\n          </div>\r\n          <div className='modal-body'>\r\n            <div className=''>\r\n              <div>\r\n                <h6>\r\n                  Study Name{' '}\r\n                  <ButtonInfo\r\n                    content={\r\n                      'Narrow down your search by providing part of the study name or protocol title.'\r\n                    }\r\n                  />{' '}\r\n                  :\r\n                </h6>\r\n                <div className='autocomplete-filter'>\r\n                  <TextFilters\r\n                    handleChange={handleStudySearch}\r\n                    type={'text'}\r\n                    id={'search-study'}\r\n                    placeholder={''}\r\n                    loading={loading}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <div>\r\n                <h6>\r\n                  Location Name{' '}\r\n                  <ButtonInfo\r\n                    content={\r\n                      'Narrow down your search by providing desired location of study (e.g. Singapore General Hospital).'\r\n                    }\r\n                  />{' '}\r\n                  :\r\n                </h6>\r\n                <div className='autocomplete-filter'>\r\n                  <LocationFilters\r\n                    handleChange={handleLocationSearch}\r\n                    type={'text'}\r\n                    id={'search-location'}\r\n                    placeholder={''}\r\n                    loading={loading}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <div>\r\n                <h6>Recruitment Status:</h6>\r\n                <CheckBoxFilters\r\n                  loading={loading}\r\n                  handleClick={handleRecruitingClick}\r\n                  id={'status-recruiting'}\r\n                  name={'Recruiting'}\r\n                />\r\n                <CheckBoxFilters\r\n                  loading={loading}\r\n                  handleClick={handleRecruitingClick}\r\n                  id={'status-not-recruiting'}\r\n                  name={'Not Recruiting'}\r\n                />\r\n              </div>\r\n              <br />\r\n              <div>\r\n                <h6>Study Type:</h6>\r\n                <CheckBoxFilters\r\n                  loading={loading}\r\n                  handleClick={handleTypeClick}\r\n                  id={'type-interventional'}\r\n                  name={'Interventional'}\r\n                  tooltip={\r\n                    'Also known as clinical trials. Participants are assigned to groups that receive one or more intervention/treatment (or no intervention) so that researchers can evaluate the effects of the interventions on biomedical or health-related outcomes.'\r\n                  }\r\n                />\r\n                <CheckBoxFilters\r\n                  loading={loading}\r\n                  handleClick={handleTypeClick}\r\n                  id={'type-observational'}\r\n                  name={'Observational'}\r\n                  tooltip={\r\n                    'A type of clinical study in which participants are identified as belonging to study groups and are assessed for biomedical or health outcomes. A patient registry is a kind of observational study.'\r\n                  }\r\n                />\r\n              </div>\r\n              <br />\r\n              <div>\r\n                <h6>Accepts Healthy Volunteers:</h6>\r\n                <CheckBoxFilters\r\n                  loading={loading}\r\n                  handleClick={handleVolunteersClick}\r\n                  id={'healthy-volunteers-yes'}\r\n                  name={'Yes'}\r\n                />\r\n                <CheckBoxFilters\r\n                  loading={loading}\r\n                  handleClick={handleVolunteersClick}\r\n                  id={'healthy-volunteers-no'}\r\n                  name={'No'}\r\n                />\r\n              </div>\r\n              <br />\r\n              <div>\r\n                <h6>Gender:</h6>\r\n                <CheckBoxFilters\r\n                  loading={loading}\r\n                  handleClick={handleGenderClick}\r\n                  id={'gender-male'}\r\n                  name={'Male Only'}\r\n                />\r\n                <CheckBoxFilters\r\n                  loading={loading}\r\n                  handleClick={handleGenderClick}\r\n                  id={'gender-female'}\r\n                  name={'Female Only'}\r\n                />\r\n              </div>\r\n              <br />\r\n              <div>\r\n                <h6>Age Groups:</h6>\r\n                <CheckBoxFilters\r\n                  loading={loading}\r\n                  handleClick={handleAgeGroupClick}\r\n                  id={'age-child'}\r\n                  name={'Child (Birth-17)'}\r\n                />\r\n                <CheckBoxFilters\r\n                  loading={loading}\r\n                  handleClick={handleAgeGroupClick}\r\n                  id={'age-adult'}\r\n                  name={'Adult (18-64)'}\r\n                />\r\n                <CheckBoxFilters\r\n                  loading={loading}\r\n                  handleClick={handleAgeGroupClick}\r\n                  id={'age-old-adult'}\r\n                  name={'Older Adult (65+)'}\r\n                />\r\n              </div>\r\n              <br />\r\n              <div>\r\n                <h6>Country:</h6>\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  value='Singapore'\r\n                  disabled\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='modal-footer'>\r\n            <button\r\n              type='button'\r\n              className='btn btn-secondary'\r\n              data-dismiss='modal'\r\n              id='close-filters'\r\n            >\r\n              Close\r\n            </button>\r\n            <button\r\n              type='button'\r\n              onClick={() => window.location.reload()}\r\n              className='btn btn-primary'\r\n            >\r\n              Clear Filters\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilters.propTypes = {\r\n  loading: PropTypes.bool.isRequired,\r\n  handleStudySearch: PropTypes.func.isRequired,\r\n  handleLocationSearch: PropTypes.func.isRequired,\r\n  handleRecruitingClick: PropTypes.func.isRequired,\r\n  handleTypeClick: PropTypes.func.isRequired,\r\n  handleVolunteersClick: PropTypes.func.isRequired,\r\n  handleGenderClick: PropTypes.func.isRequired,\r\n  handleAgeGroupClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filters;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Filters from './Filters.js';\r\n\r\nconst openFilter = () => {\r\n  document.getElementById('filters').click();\r\n  window.addEventListener('popstate', closeFilter, false);\r\n  window.history.pushState({ filter: 'open' }, ''); // write twice for it to work\r\n  window.history.pushState({ filter: 'open' }, '');\r\n};\r\nconst closeFilter = (event) => {\r\n  if (event.state && event.state.filter === 'open') {\r\n    document.getElementById('close-filters').click();\r\n    window.removeEventListener('popstate', closeFilter, false);\r\n  }\r\n};\r\n\r\nconst Jumbotron = ({\r\n  studiesFound,\r\n  loading,\r\n  handleStudySearch,\r\n  handleLocationSearch,\r\n  handleRecruitingClick,\r\n  handleTypeClick,\r\n  handleVolunteersClick,\r\n  handleGenderClick,\r\n  handleAgeGroupClick,\r\n}) => {\r\n  return (\r\n    <div className='jumbotron jumbotron-fluid'>\r\n      <div className='container'>\r\n        <div className='breadcrumbs'>\r\n          {loading\r\n            ? 'Connecting to ClinicalTrials.gov database...'\r\n            : 'Data Sourced from ClinicalTrials.gov'}\r\n        </div>\r\n        <h1 className='title'>\r\n          {loading\r\n            ? 'Searching for Studies...'\r\n            : `${studiesFound.toLocaleString()} ${\r\n                studiesFound > 1 ? 'Studies' : 'Study'\r\n              } Found`}\r\n        </h1>\r\n        <div>\r\n          <button\r\n            className='btn btn-primary'\r\n            type='button'\r\n            data-toggle='modal'\r\n            data-target='#filters'\r\n            onClick={openFilter}\r\n          >\r\n            <i className='fa fa-filter'></i> Filters\r\n          </button>\r\n        </div>\r\n        <Filters\r\n          loading={loading}\r\n          handleStudySearch={handleStudySearch}\r\n          handleLocationSearch={handleLocationSearch}\r\n          handleRecruitingClick={handleRecruitingClick}\r\n          handleTypeClick={handleTypeClick}\r\n          handleVolunteersClick={handleVolunteersClick}\r\n          handleGenderClick={handleGenderClick}\r\n          handleAgeGroupClick={handleAgeGroupClick}\r\n          handleCloseFilters={openFilter}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nJumbotron.propTypes = {\r\n  studiesFound: PropTypes.number.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleStudySearch: PropTypes.func.isRequired,\r\n  handleLocationSearch: PropTypes.func.isRequired,\r\n  handleRecruitingClick: PropTypes.func.isRequired,\r\n  handleTypeClick: PropTypes.func.isRequired,\r\n  handleVolunteersClick: PropTypes.func.isRequired,\r\n  handleGenderClick: PropTypes.func.isRequired,\r\n  handleAgeGroupClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Jumbotron;\r\n","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loader\"></div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LoadMoreBtn = ({ handleClick }) => {\r\n  return (\r\n    <div className='row'>\r\n      <div className='col text-center'>\r\n        <button onClick={handleClick} className='btn btn-primary mt-4 mb-5'>\r\n          Fetch More Records\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoadMoreBtn.propTypes = {\r\n  handleClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default LoadMoreBtn;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FavButton = ({ NCTId, handleClick }) => {\r\n  const [favourite, setFavourite] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let fav = JSON.parse(localStorage.getItem('favourite')) || [];\r\n    if (fav.includes(NCTId)) {\r\n      setFavourite(true);\r\n    } else {\r\n      setFavourite(false);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const toggleSwitch = () => {\r\n    setFavourite(!favourite); // useEffect below will fire everytime favourite is changed\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleClick(favourite, NCTId);\r\n  }, [handleClick, favourite, NCTId]); // favourite as dependency, to fire only when favourite has changed\r\n\r\n  return (\r\n    <span\r\n      className={`button-favourite ${favourite && `favourited`}`}\r\n      onClick={toggleSwitch}\r\n      id={`fav-${NCTId}`}\r\n    >\r\n      <i className='fa fa-heart'></i>{' '}\r\n      {favourite ? ' Favourited' : ' Add to Favourite'}\r\n    </span>\r\n  );\r\n};\r\n\r\nFavButton.propTypes = {\r\n  NCTId: PropTypes.string.isRequired,\r\n  handleClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FavButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ButtonStatus = ({ status }) => {\r\n  return (\r\n    <span\r\n      className={`status-badge ${\r\n        status === 'Recruiting'\r\n          ? 'status-active'\r\n          : status === 'Completed'\r\n          ? 'status-completed'\r\n          : 'status-inactive'\r\n      }`}\r\n    >\r\n      {status}\r\n    </span>\r\n  );\r\n};\r\n\r\nButtonStatus.propTypes = {\r\n  status: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ButtonStatus;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst OptInForm = ({ NCTId, recipientList }) => {\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  const toggleSwitch = () => {\r\n    setChecked(!checked);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // disable toggle temporarily to prevent errors when double-clicked\r\n    document.getElementById(`opt-in-${NCTId}`).disabled = true;\r\n    setTimeout(() => {\r\n      document.getElementById(`opt-in-${NCTId}`).disabled = false;\r\n    }, 250);\r\n    // eslint-disable-next-line\r\n  }, [checked]);\r\n\r\n  return (\r\n    <form className='border p-3'>\r\n      <div className='form-check'>\r\n        <input\r\n          onChange={toggleSwitch}\r\n          type='checkbox'\r\n          className='form-check-input'\r\n          value=''\r\n          id={`opt-in-${NCTId}`}\r\n          data-toggle='collapse'\r\n          data-target={`#form-${NCTId}`}\r\n        />\r\n        <label htmlFor={`opt-in-${NCTId}`} className='form-check-label'>\r\n          I have read the information above and acknowledge that I fulfill all\r\n          eligibility criteria to the best of my knowledge. I agree to be\r\n          contacted by the study team for further screening and participation in\r\n          this study.\r\n        </label>\r\n      </div>\r\n      <div id={`form-${NCTId}`} className='collapse text-center'>\r\n        <input\r\n          required\r\n          type='text'\r\n          className='form-control form-control mt-3'\r\n          placeholder='Name'\r\n          name='name'\r\n        />\r\n        <input\r\n          required\r\n          type='email'\r\n          className='form-control form-control mt-3'\r\n          placeholder='Email'\r\n          name='email'\r\n        />\r\n        <input\r\n          required\r\n          type='tel'\r\n          className='form-control form-control mt-3'\r\n          placeholder='Contact No.'\r\n          name='contactNo'\r\n        />\r\n        <textarea\r\n          className='form-control'\r\n          placeholder='Remarks'\r\n          rows='3'\r\n        ></textarea>\r\n        <hr />\r\n        {recipientList.map((item, index) => {\r\n          return (\r\n            <div key={`${NCTId}-${index}`}>\r\n              <h6 className='font-weight-bold text-left'>\r\n                Recipient {index + 1}:\r\n              </h6>\r\n              <div className='input-group'>\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  value={item[0]}\r\n                  disabled\r\n                />\r\n              </div>\r\n              <div className='input-group'>\r\n                <input\r\n                  type='text'\r\n                  className='form-control'\r\n                  value={item[1]}\r\n                  disabled\r\n                />\r\n              </div>\r\n              <br />\r\n            </div>\r\n          );\r\n        })}\r\n        <button type='button' className='btn btn-primary'>\r\n          Send to Study Team\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nOptInForm.propTypes = {\r\n  NCTId: PropTypes.string.isRequired,\r\n  recipientList: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default OptInForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ButtonStatus from './ButtonStatus.js';\r\nimport ButtonInfo from './ButtonInfo.js';\r\nimport OptInForm from './OptInForm.js';\r\n\r\nconst SlideIn = ({ study }) => {\r\n  const NCTId = study.ProtocolSection.IdentificationModule.NCTId;\r\n  const lastUpdate = study.ProtocolSection.StatusModule.LastUpdateSubmitDate;\r\n  const protocolTitle =\r\n    study.ProtocolSection.IdentificationModule.OfficialTitle;\r\n  const briefSummary = study.ProtocolSection.DescriptionModule.BriefSummary;\r\n  const primaryPurpose =\r\n    'DesignInfo' in study.ProtocolSection.DesignModule &&\r\n    'DesignPrimaryPurpose' in study.ProtocolSection.DesignModule.DesignInfo\r\n      ? study.ProtocolSection.DesignModule.DesignInfo.DesignPrimaryPurpose\r\n      : 'No Data';\r\n  const studyType = study.ProtocolSection.DesignModule.StudyType;\r\n  const interventionDetails =\r\n    studyType === 'Interventional'\r\n      ? study.ProtocolSection.ArmsInterventionsModule.InterventionList\r\n          .Intervention\r\n      : 'Not Applicable';\r\n  const phase =\r\n    studyType === 'Interventional'\r\n      ? study.ProtocolSection.DesignModule.PhaseList.Phase\r\n      : 'Not Applicable';\r\n  const biospec =\r\n    'BioSpec' in study.ProtocolSection.DesignModule\r\n      ? study.ProtocolSection.DesignModule.BioSpec.BioSpecDescription\r\n      : 'Not Applicable';\r\n  const conditions =\r\n    study.ProtocolSection.ConditionsModule.ConditionList.Condition;\r\n  const enrollmentCount =\r\n    'EnrollmentInfo' in study.ProtocolSection.DesignModule\r\n      ? study.ProtocolSection.DesignModule.EnrollmentInfo.EnrollmentCount\r\n      : 'Not Specified';\r\n  const locations =\r\n    'ContactsLocationsModule' in study.ProtocolSection &&\r\n    'LocationList' in study.ProtocolSection.ContactsLocationsModule\r\n      ? study.ProtocolSection.ContactsLocationsModule.LocationList.Location\r\n      : 'No Data';\r\n  let status = study.ProtocolSection.StatusModule.OverallStatus;\r\n  status =\r\n    status === 'Recruiting'\r\n      ? 'Recruiting'\r\n      : status === 'Completed'\r\n      ? 'Completed'\r\n      : 'Not Recruiting';\r\n  const healthyVolunteer =\r\n    study.ProtocolSection.EligibilityModule.HealthyVolunteers;\r\n  const gender = study.ProtocolSection.EligibilityModule.Gender;\r\n  const minAge = study.ProtocolSection.EligibilityModule.MinimumAge;\r\n  const maxAge =\r\n    'MaximumAge' in study.ProtocolSection.EligibilityModule\r\n      ? study.ProtocolSection.EligibilityModule.MaximumAge\r\n      : 'No Data';\r\n  const criteria = study.ProtocolSection.EligibilityModule.EligibilityCriteria.split(\r\n    '\\n'\r\n  ).filter((item) => item !== '');\r\n\r\n  let recipientList = [];\r\n  if ('ContactsLocationsModule' in study.ProtocolSection) {\r\n    if ('CentralContactList' in study.ProtocolSection.ContactsLocationsModule) {\r\n      study.ProtocolSection.ContactsLocationsModule.CentralContactList.CentralContact.forEach(\r\n        (item) => {\r\n          item.CentralContactRole === 'Contact' &&\r\n            recipientList.push([\r\n              item.CentralContactName,\r\n              item.CentralContactEMail,\r\n            ]);\r\n        }\r\n      );\r\n    } else if (\r\n      'LocationList' in study.ProtocolSection.ContactsLocationsModule\r\n    ) {\r\n      study.ProtocolSection.ContactsLocationsModule.LocationList.Location.forEach(\r\n        (item) => {\r\n          'LocationContactList' in item &&\r\n            item.LocationContactList.LocationContact.forEach((item) => {\r\n              item.LocationContactRole === 'Contact' &&\r\n                recipientList.push([\r\n                  item.LocationContactName,\r\n                  item.LocationContactEMail,\r\n                ]);\r\n            });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='modal fade'\r\n      key={NCTId}\r\n      id={`slide-in-${NCTId}`}\r\n      tabIndex='-1'\r\n      role='dialog'\r\n      aria-labelledby={`slide-in-${NCTId}`}\r\n      aria-hidden='true'\r\n    >\r\n      <div\r\n        className='modal-dialog modal-dialog-slideout modal-lg'\r\n        role='document'\r\n      >\r\n        <div className='modal-content'>\r\n          <div className='modal-header'>\r\n            <div>\r\n              <h5 className='modal-title'>Study ID: {NCTId}</h5>\r\n              {/* <h5 classname=\"modal-title\">Last Updated on {lastUpdate}</h5> */}\r\n              <div className='modal-title-status'>\r\n                <ButtonStatus status={status} />\r\n                &nbsp;\r\n                <span>Last Update: {lastUpdate}</span>\r\n              </div>\r\n            </div>\r\n            <button\r\n              type='button'\r\n              className='close'\r\n              data-dismiss='modal'\r\n              aria-label='Close'\r\n            >\r\n              <span aria-hidden='true'>×</span>\r\n            </button>\r\n          </div>\r\n          <div className='modal-body'>\r\n            <div>\r\n              <h6 className='font-weight-bold'>Protocol Title:</h6>\r\n              <span>{protocolTitle}</span>\r\n            </div>\r\n            <br />\r\n            <div>\r\n              <h6 className='font-weight-bold'>Study Summary:</h6>\r\n              <span>{briefSummary}</span>\r\n            </div>\r\n            <br />\r\n            <div>\r\n              <h6 className='font-weight-bold'>\r\n                Study Type{' '}\r\n                {studyType === 'Interventional' && (\r\n                  <ButtonInfo\r\n                    content={\r\n                      'An interventional trial is a type of clinical study in which participants are assigned to groups that receive one or more intervention/treatment (or no intervention) so that researchers can evaluate the effects of the interventions on biomedical or health-related outcomes.'\r\n                    }\r\n                  />\r\n                )}\r\n                {studyType === 'Observational' && (\r\n                  <ButtonInfo\r\n                    content={\r\n                      'An observational trial is a type of clinical study in which participants are identified as belonging to study groups and are assessed for biomedical or health outcomes. A patient registry is a type of observational study.'\r\n                    }\r\n                  />\r\n                )}{' '}\r\n                :\r\n              </h6>\r\n              <span>{studyType} trial</span>\r\n            </div>\r\n            <br />\r\n            {studyType === 'Interventional' && (\r\n              <div>\r\n                <div>\r\n                  <h6 className='font-weight-bold'>\r\n                    Intervention Arms Involved{' '}\r\n                    <ButtonInfo\r\n                      content={\r\n                        \"A group or subgroup of participants in a clinical trial that receives a specific intervention/treatment, or no intervention, according to the trial's protocol.\"\r\n                      }\r\n                    />{' '}\r\n                    :\r\n                  </h6>\r\n                  <table className='table table-borderless table-sm'>\r\n                    <tbody>\r\n                      {interventionDetails.map((intervention, index) => {\r\n                        return (\r\n                          <React.Fragment\r\n                            key={`${intervention.InterventionName}-${index}`}\r\n                          >\r\n                            <tr>\r\n                              <td className='modal-intervention-top'>\r\n                                {index + 1}.\r\n                              </td>\r\n                              <td className='modal-intervention-top'>\r\n                                {intervention.InterventionName}\r\n                              </td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td className='modal-intervention-bottom'></td>\r\n                              <td className='modal-intervention-bottom'>\r\n                                {intervention.InterventionDescription}\r\n                              </td>\r\n                            </tr>\r\n                          </React.Fragment>\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <br />\r\n                {primaryPurpose !== 'No Data' && (\r\n                  <div>\r\n                    <div>\r\n                      <h6 className='font-weight-bold'>\r\n                        Primary Purpose{' '}\r\n                        <ButtonInfo\r\n                          content={\r\n                            'The main reason for the clinical trial. The types of primary purpose are: treatment, prevention, diagnostic, supportive care, screening, health services research, basic science, and other.'\r\n                          }\r\n                        />{' '}\r\n                        :\r\n                      </h6>\r\n                      <span>{primaryPurpose}</span>\r\n                    </div>\r\n                    <br />\r\n                  </div>\r\n                )}\r\n\r\n                <div>\r\n                  <h6 className='font-weight-bold'>\r\n                    Study Phase{' '}\r\n                    <ButtonInfo\r\n                      content={\r\n                        \"The stage of a clinical trial studying a drug or biological product, based on definitions developed by the U.S. Food and Drug Administration (FDA). The phase is based on the study's objective, the number of participants, and other characteristics. There are five phases: Early Phase 1 (formerly listed as Phase 0), Phase 1, Phase 2, Phase 3, and Phase 4. Not Applicable is used to describe trials without FDA-defined phases, including trials of devices or behavioral interventions.\"\r\n                      }\r\n                    />{' '}\r\n                    :\r\n                  </h6>\r\n                  <span>{phase}</span>\r\n                </div>\r\n                <br />\r\n              </div>\r\n            )}\r\n            {biospec !== 'Not Applicable' && (\r\n              <div>\r\n                <div>\r\n                  <h6 className='font-weight-bold'>Biospecimens Involved:</h6>\r\n                  <span>{biospec}</span>\r\n                </div>\r\n                <br />\r\n              </div>\r\n            )}\r\n            <div>\r\n              <h6 className='font-weight-bold'>\r\n                {conditions.length > 1\r\n                  ? 'Target Conditions'\r\n                  : 'Target Condition'}{' '}\r\n                <ButtonInfo content='The disease, disorder, syndrome, illness, or injury that is being studied.' />{' '}\r\n                :\r\n              </h6>\r\n              {conditions.map((condition, index) => (\r\n                <p key={`${condition}-${index}`}>{condition}</p>\r\n              ))}\r\n            </div>\r\n            <br />\r\n            <div>\r\n              <h6 className='font-weight-bold'>\r\n                Target Enrolment{' '}\r\n                <ButtonInfo content='Number of participants that the researchers need for this study.' />{' '}\r\n                :\r\n              </h6>\r\n              <span>\r\n                {enrollmentCount !== 'Not Specified'\r\n                  ? `${enrollmentCount} participants`\r\n                  : `${enrollmentCount}`}\r\n              </span>\r\n            </div>\r\n            <br />\r\n            <div>\r\n              <h6 className='font-weight-bold'>\r\n                Study Locations{' '}\r\n                <ButtonInfo\r\n                  content={\r\n                    'Locations that are currently conducting this study. You may specify your preferred location during your application.'\r\n                  }\r\n                />{' '}\r\n                :\r\n              </h6>\r\n              {locations !== 'No Data' ? (\r\n                locations.map((location, index) => (\r\n                  <p key={`${location}-${index}`}>\r\n                    {location.LocationFacility}, {location.LocationCountry}\r\n                  </p>\r\n                ))\r\n              ) : (\r\n                <p>No Data</p>\r\n              )}\r\n            </div>\r\n            <br />\r\n\r\n            <div>\r\n              <hr />\r\n              <h6 className='font-weight-bold'>Eligibility Criteria:</h6>\r\n              <hr />\r\n              <div>\r\n                <h6 className='font-weight-bold'>Gender:</h6>\r\n                <span>{gender}</span>\r\n              </div>\r\n              <br />\r\n              <div>\r\n                {maxAge !== 'No Data' ? (\r\n                  <h6 className='font-weight-bold'>Age Group:</h6>\r\n                ) : (\r\n                  <h6 className='font-weight-bold'>Minimum Age:</h6>\r\n                )}\r\n                {/* <h6 className=\"font-weight-bold\">Age Group:</h6> */}\r\n                {maxAge !== 'No Data' ? (\r\n                  <span>\r\n                    {minAge} to {maxAge}\r\n                  </span>\r\n                ) : (\r\n                  <span>{minAge}</span>\r\n                )}\r\n              </div>\r\n              <br />\r\n              <div>\r\n                <h6 className='font-weight-bold'>Accepts Healthy Volunteer:</h6>\r\n                <span>{healthyVolunteer === 'No' ? 'No' : 'Yes'}</span>\r\n              </div>\r\n              <br />\r\n              <table className='table table-borderless table-sm'>\r\n                <tbody>\r\n                  {criteria.map((item, index) => {\r\n                    return item.toLowerCase() === 'inclusion criteria:' ? (\r\n                      <tr key={index}>\r\n                        <td\r\n                          colSpan='2'\r\n                          className='font-weight-bold modal-inclusion-criteria'\r\n                        >\r\n                          Inclusion Criteria{' '}\r\n                          <ButtonInfo\r\n                            content={\r\n                              'A type of eligibility criteria. These are the reasons that a person is ALLOWED to participate in a clinical study.'\r\n                            }\r\n                          />{' '}\r\n                          :\r\n                        </td>\r\n                      </tr>\r\n                    ) : item.toLowerCase() === 'exclusion criteria:' ? (\r\n                      <tr key={index}>\r\n                        <td\r\n                          colSpan='2'\r\n                          className='font-weight-bold modal-exclusion-criteria'\r\n                        >\r\n                          Exclusion Criteria{' '}\r\n                          <ButtonInfo\r\n                            content={\r\n                              'A type of eligibility criteria. These are reasons that a person is NOT ALLOWED to participate in a clinical study.'\r\n                            }\r\n                          />{' '}\r\n                          :\r\n                        </td>\r\n                      </tr>\r\n                    ) : (\r\n                      <tr key={index}>\r\n                        <td>&bull;</td>\r\n                        <td>\r\n                          {item[0] !== item[0].toUpperCase()\r\n                            ? item.replace(item[0], item[0].toUpperCase())\r\n                            : item}\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <br />\r\n            <OptInForm NCTId={NCTId} recipientList={recipientList} />\r\n          </div>\r\n          <div className='modal-footer'>\r\n            <button\r\n              type='button'\r\n              className='btn btn-secondary'\r\n              data-dismiss='modal'\r\n              id={`close-slide-in-${NCTId}`}\r\n            >\r\n              Close\r\n            </button>\r\n            {/* <button type=\"button\" className=\"btn btn-primary\">Apply</button> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSlideIn.propTypes = {\r\n  study: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default SlideIn;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FavButton from './FavButton.js';\r\nimport SlideIn from './SlideIn.js';\r\nimport ButtonStatus from './ButtonStatus.js';\r\n\r\nconst Card = ({ study, index }) => {\r\n  const NCTId = study.ProtocolSection.IdentificationModule.NCTId;\r\n  const protocolTitle =\r\n    study.ProtocolSection.IdentificationModule.OfficialTitle;\r\n  const studyType = study.ProtocolSection.DesignModule.StudyType;\r\n  const healthyVolunteer =\r\n    'HealthyVolunteers' in study.ProtocolSection.EligibilityModule\r\n      ? study.ProtocolSection.EligibilityModule.HealthyVolunteers\r\n      : 'No';\r\n  let conditions =\r\n    study.ProtocolSection.ConditionsModule.ConditionList.Condition;\r\n  if (conditions.length > 3) {\r\n    conditions = conditions.slice(0, 2);\r\n    conditions.push('...');\r\n  }\r\n  const enrollmentCount =\r\n    'EnrollmentInfo' in study.ProtocolSection.DesignModule\r\n      ? study.ProtocolSection.DesignModule.EnrollmentInfo.EnrollmentCount\r\n      : 'Not Specified';\r\n  let locations =\r\n    'ContactsLocationsModule' in study.ProtocolSection &&\r\n    'LocationList' in study.ProtocolSection.ContactsLocationsModule\r\n      ? study.ProtocolSection.ContactsLocationsModule.LocationList.Location\r\n      : 'No Data';\r\n  if (locations !== 'No Data' && locations.length > 3) {\r\n    locations = locations.slice(0, 2);\r\n    locations.push({ LocationFacility: '...' });\r\n  }\r\n\r\n  let status = study.ProtocolSection.StatusModule.OverallStatus;\r\n  status =\r\n    status === 'Recruiting'\r\n      ? 'Recruiting'\r\n      : status === 'Completed'\r\n      ? 'Completed'\r\n      : 'Not Recruiting';\r\n\r\n  const handleFavClick = (favourite, NCTId) => {\r\n    if (favourite) {\r\n      let fav = JSON.parse(localStorage.getItem('favourite')) || [];\r\n      if (fav.indexOf(NCTId) < 0) fav.push(NCTId);\r\n      localStorage.setItem('favourite', JSON.stringify(fav));\r\n    } else {\r\n      let fav = JSON.parse(localStorage.getItem('favourite')) || [];\r\n      if (fav.indexOf(NCTId) >= 0) fav.splice(fav.indexOf(NCTId), 1);\r\n      localStorage.setItem('favourite', JSON.stringify(fav));\r\n    }\r\n  };\r\n\r\n  const openSlideIn = () => {\r\n    document.getElementById(`slide-in-${NCTId}`).click();\r\n    window.history.pushState({ slideIn: { NCTId } }, ''); // write twice for it to work\r\n    window.history.pushState({ slideIn: { NCTId } }, '');\r\n    window.addEventListener('popstate', closeSlideIn, false);\r\n  };\r\n\r\n  const closeSlideIn = (event) => {\r\n    if (event.state) {\r\n      document.getElementById(`close-slide-in-${NCTId}`).click();\r\n      window.removeEventListener('popstate', closeSlideIn, false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <tr className='table-card' key={NCTId}>\r\n      <td className='table-serial'>\r\n        <span>{index + 1}.</span>\r\n      </td>\r\n      <td className='table-content'>\r\n        <span>\r\n          <a\r\n            data-toggle='modal'\r\n            onClick={openSlideIn}\r\n            href={`#slide-in-${NCTId}`}\r\n          >\r\n            {protocolTitle}\r\n          </a>\r\n        </span>\r\n        <br />\r\n        <div className='table-content-info'>\r\n          <table className='table table-borderless table-sm'>\r\n            <tbody>\r\n              <tr>\r\n                <td>Study Type:</td>\r\n                <td>{studyType}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  {conditions.length > 1\r\n                    ? 'Target Conditions:'\r\n                    : 'Target Condition:'}\r\n                </td>\r\n                <td>\r\n                  {conditions.map((condition, index) => (\r\n                    <p key={`${NCTId}-${condition}-${index}`}>{condition}</p>\r\n                  ))}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Healthy Volunteers:</td>\r\n                <td>{healthyVolunteer === 'No' ? 'No' : 'Yes'}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Target Enrolment:</td>\r\n                <td>\r\n                  {enrollmentCount !== 'Not Specified'\r\n                    ? `${enrollmentCount} participants`\r\n                    : `${enrollmentCount}`}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>{locations.length > 1 ? 'Locations:' : 'Location:'}</td>\r\n                <td>\r\n                  {locations !== 'No Data' ? (\r\n                    locations.map((location, index) => (\r\n                      <p key={`${NCTId}-${location.locationFacility}-${index}`}>\r\n                        {location.LocationFacility}\r\n                        {location.LocationFacility !== '...' && ','}{' '}\r\n                        {location.LocationCountry}\r\n                      </p>\r\n                    ))\r\n                  ) : (\r\n                    <p>No Data</p>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        {/* bottom row */}\r\n        <div className='table-content-more'>\r\n          <FavButton handleClick={handleFavClick} NCTId={NCTId} />\r\n          <ButtonStatus status={status} />\r\n        </div>\r\n        <SlideIn study={study} key={NCTId} />\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\nCard.propTypes = {\r\n  study: PropTypes.object.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Card;\r\n","import { record_size } from '../../others/configuration.js';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  min_rnk: 1,\r\n  max_rnk: record_size,\r\n  ConditionSearch: '',\r\n  OfficialTitle: '',\r\n  LocationSearch: '',\r\n  OverallStatus: '',\r\n  StudyType: '',\r\n  HealthyVolunteers: '',\r\n  Gender: '',\r\n  StdAge: '',\r\n  LocationCountry: 'Singapore',\r\n  NCTId: '',\r\n  studiesFound: 0,\r\n  trials: [],\r\n};\r\n\r\nexport default initialState;\r\n","import React, { useEffect, useReducer } from 'react';\nimport Navbar from '../elements/Navbar.js';\nimport Jumbotron from '../elements/Jumbotron.js';\nimport Spinner from '../elements/Spinner.js';\nimport LoadMoreBtn from '../elements/LoadMoreBtn.js';\nimport ScrollUpButton from 'react-scroll-up-button';\nimport Card from '../elements/Card.js';\nimport { record_size, base_api } from '../../others/configuration.js';\nimport initialState from './initialState';\n\nconst getRecruitingStatus = () => {\n  const recruitingStatus = document.getElementById('status-recruiting');\n  const notRecruitingStatus = document.getElementById('status-not-recruiting');\n  let result = [];\n  recruitingStatus.checked && result.push('Recruiting');\n  notRecruitingStatus.checked && result.push('NOT Recruiting');\n  return result.join('+OR+');\n};\n\nconst getStudyType = () => {\n  const interventionalType = document.getElementById('type-interventional');\n  const observationalType = document.getElementById('type-observational');\n  let result = [];\n  interventionalType.checked && result.push('Interventional');\n  observationalType.checked && result.push('Observational');\n  if (result.length === 2) result = []; // include both types if both checkboxes are selected\n  return result.join('+OR+');\n};\n\nconst getHealthyVolunteers = () => {\n  const volunteersYes = document.getElementById('healthy-volunteers-yes');\n  const volunteersNo = document.getElementById('healthy-volunteers-no');\n  let result = [];\n  volunteersYes.checked && result.push('Accepts Healthy Volunteers');\n  volunteersNo.checked && result.push('NOT Accept Healthy Volunteers');\n  return result.join('+OR+');\n};\n\nconst getGenders = () => {\n  const genderMale = document.getElementById('gender-male');\n  const genderFemale = document.getElementById('gender-female');\n  let result = [];\n  genderMale.checked && result.push('Male');\n  genderFemale.checked && result.push('Female');\n  if (result.length === 2) result = []; // include both genders if both checkboxes are selected\n  return result.join('+OR+');\n};\n\nconst getAgeGroups = () => {\n  const ageChild = document.getElementById('age-child');\n  const ageAdult = document.getElementById('age-adult');\n  const ageOldAdult = document.getElementById('age-old-adult');\n  let result = [];\n  ageChild.checked && result.push('Child');\n  ageAdult.checked && result.push('Adult');\n  ageOldAdult.checked && result.push('Older Adult');\n  if (result.length === 3) result = []; // include all age groups if all checkboxes are selected\n  return result.join('+OR+');\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_ITEMS':\n      return {\n        ...state,\n        loading: false,\n        studiesFound: action.result.FullStudiesResponse.NStudiesFound,\n        trials: action.result.FullStudiesResponse.FullStudies,\n        NCTId: action.fav,\n      };\n\n    case 'SEARCH_CONDITION':\n      return {\n        ...state,\n        loading: true,\n        ConditionSearch: action.searchTerm,\n        min_rnk: 1,\n        max_rnk: record_size,\n        trials: [],\n      };\n\n    case 'SEARCH_STUDY':\n      return {\n        ...state,\n        loading: true,\n        OfficialTitle: action.searchTerm,\n        min_rnk: 1,\n        max_rnk: record_size,\n        trials: [],\n      };\n\n    case 'SEARCH_LOCATION':\n      return {\n        ...state,\n        loading: true,\n        LocationSearch: action.searchTerm,\n        min_rnk: 1,\n        max_rnk: record_size,\n        trials: [],\n      };\n\n    case 'CHECK_RECRUITMENT_STATUS':\n      const recruitingStatus = getRecruitingStatus();\n      return {\n        ...state,\n        loading: true,\n        OverallStatus: recruitingStatus,\n        min_rnk: 1,\n        max_rnk: record_size,\n        trials: [],\n      };\n\n    case 'CHECK_STUDY_TYPE':\n      const studyType = getStudyType();\n      return {\n        ...state,\n        loading: true,\n        StudyType: studyType,\n        min_rnk: 1,\n        max_rnk: record_size,\n        trials: [],\n      };\n\n    case 'CHECK_HEALTHY_VOLUNTEERS':\n      const healthyVolunteers = getHealthyVolunteers();\n      return {\n        ...state,\n        loading: true,\n        HealthyVolunteers: healthyVolunteers,\n        min_rnk: 1,\n        max_rnk: record_size,\n        trials: [],\n      };\n\n    case 'CHECK_GENDER':\n      const gender = getGenders();\n      return {\n        ...state,\n        loading: true,\n        Gender: gender,\n        min_rnk: 1,\n        max_rnk: record_size,\n        trials: [],\n      };\n\n    case 'CHECK_AGE_GROUP':\n      const ageGroup = getAgeGroups();\n      return {\n        ...state,\n        loading: true,\n        StdAge: ageGroup,\n        min_rnk: 1,\n        max_rnk: record_size,\n        trials: [],\n      };\n\n    case 'STOP_LOADING':\n      return {\n        ...state,\n        loading: false,\n      };\n\n    case 'LOAD_MORE':\n      return {\n        ...state,\n        loading: true,\n        min_rnk: state.min_rnk + record_size,\n        max_rnk: state.max_rnk + record_size,\n      };\n\n    case 'CONCAT_TRIALS':\n      return {\n        ...state,\n        loading: false,\n        trials: [\n          ...state.trials,\n          ...action.newTrials.FullStudiesResponse.FullStudies,\n        ],\n      };\n    default:\n      return state;\n  }\n};\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const handleConditionSearch = (searchTerm) =>\n    dispatch({ type: 'SEARCH_CONDITION', searchTerm });\n  const handleStudySearch = (searchTerm) =>\n    dispatch({ type: 'SEARCH_STUDY', searchTerm });\n  const handleLocationSearch = (searchTerm) =>\n    dispatch({ type: 'SEARCH_LOCATION', searchTerm });\n  const handleRecruitingClick = () =>\n    dispatch({ type: 'CHECK_RECRUITMENT_STATUS' });\n  const handleTypeClick = () => dispatch({ type: 'CHECK_STUDY_TYPE' });\n  const handleVolunteersClick = () =>\n    dispatch({ type: 'CHECK_HEALTHY_VOLUNTEERS' });\n  const handleGenderClick = () => dispatch({ type: 'CHECK_GENDER' });\n  const handleAgeGroupClick = () => dispatch({ type: 'CHECK_AGE_GROUP' });\n  const handleLoadMore = () => dispatch({ type: 'LOAD_MORE' });\n\n  const apiGenerator = (state) => {\n    const api_base_url = base_api;\n    const keyPrefix = 'AREA%5B';\n    const keySuffix = '%5D';\n    const exprPrefix = '%28';\n    const exprSuffix = '%29';\n    let expr = '';\n    for (let key in state) {\n      if (\n        key[0] === key[0].toUpperCase() &&\n        state[key] !== '' &&\n        key !== 'NCTId'\n      ) {\n        if (key === 'OverallStatus') {\n          expr += `${keyPrefix}${key}${keySuffix}COVERAGE%5BFullMatch%5D${exprPrefix}${state[key]}${exprSuffix}+AND+`; // special handling to filter out terms like 'not yet recruiting'\n        } else {\n          expr += `${keyPrefix}${key}${keySuffix}${exprPrefix}${state[key]}${exprSuffix}+AND+`;\n        }\n      }\n    }\n    if (expr.length > 0) expr = expr.substr(0, expr.length - 5); //remove final '+AND+'\n    return `${api_base_url}&expr=${expr}&min_rnk=${state.min_rnk}&max_rnk=${state.max_rnk}&fmt=json`;\n    // take note of initialState above\n  };\n\n  const fetchItems = async (api_url) => {\n    let fav = JSON.parse(localStorage.getItem('favourite')) || [];\n    try {\n      const result = await (await fetch(api_url)).json();\n      dispatch({\n        type: 'FETCH_ITEMS',\n        result,\n        fav,\n      });\n    } catch (error) {\n      console.log(`Error fetching ${api_url}: ${error}`);\n    }\n  };\n\n  // respond to filter changes\n  useEffect(() => {\n    let api_url = apiGenerator(state);\n    fetchItems(api_url);\n    // eslint-disable-next-line\n  }, [\n    state.ConditionSearch,\n    state.OfficialTitle,\n    state.LocationSearch,\n    state.OverallStatus,\n    state.StudyType,\n    state.HealthyVolunteers,\n    state.Gender,\n    state.StdAge,\n  ]);\n\n  // respond to load more\n  useEffect(() => {\n    if (state.min_rnk <= state.studiesFound) {\n      let api_url = apiGenerator(state);\n      fetch(api_url)\n        .then((res) => res.json())\n        .then((res) => {\n          dispatch({ type: 'CONCAT_TRIALS', newTrials: res });\n        });\n    }\n    // eslint-disable-next-line\n  }, [state.min_rnk]);\n\n  return (\n    <div className='container-fluid p-0'>\n      <ScrollUpButton\n        ContainerClassName='AnyClassForContainer'\n        TransitionClassName='AnyClassForTransition'\n      />\n      <Navbar\n        handleConditionSearch={handleConditionSearch}\n        favCount={state.NCTId.length}\n        loading={state.loading}\n      />\n      <Jumbotron\n        studiesFound={state.studiesFound}\n        loading={state.loading}\n        handleConditionSearch={(searchTerm) =>\n          dispatch({ type: 'SEARCH_CONDITION', searchTerm })\n        }\n        handleStudySearch={handleStudySearch}\n        handleLocationSearch={handleLocationSearch}\n        handleRecruitingClick={handleRecruitingClick}\n        handleTypeClick={handleTypeClick}\n        handleVolunteersClick={handleVolunteersClick}\n        handleGenderClick={handleGenderClick}\n        handleAgeGroupClick={handleAgeGroupClick}\n      />\n      {state.trials !== undefined ? (\n        <div className='container'>\n          <div className='row'>\n            <div\n              className={`border content ${\n                state.loading && state.min_rnk === 1 && 'content-loading'\n              }`}\n            >\n              <table className='table'>\n                <tbody>\n                  {state.trials\n                    .filter(\n                      (trial) =>\n                        trial.Study.ProtocolSection.StatusModule\n                          .OverallStatus !== 'Withheld'\n                    )\n                    .map((trial, index) => (\n                      <Card study={trial.Study} index={index} key={index} />\n                    ))}\n                </tbody>\n              </table>\n            </div>\n\n            {/* sidebar */}\n            <div>{/* to render sidebar here */}</div>\n          </div>\n          {state.loading ? (\n            <Spinner />\n          ) : state.studiesFound > state.max_rnk ? (\n            <LoadMoreBtn handleClick={handleLoadMore} />\n          ) : (\n            <div className='container text-center mt-4 mb-5'>\n              <span>All records shown</span>\n            </div>\n          )}\n        </div>\n      ) : (\n        <div className='container text-center not-found'>\n          <img src={require(`../../images/not-found.jpg`)} alt='not-found' />\n          <br />\n          <span>No data found</span>\n          <br />\n          <span>Please try a different search criteria</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport Navbar from '../elements/Navbar.js';\r\nimport Jumbotron from '../elements/Jumbotron.js';\r\nimport Spinner from '../elements/Spinner.js';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn.js';\r\nimport ScrollUpButton from 'react-scroll-up-button';\r\nimport Card from '../elements/Card.js';\r\nimport { record_size, base_api } from '../../others/configuration.js';\r\n\r\nclass BrowseFavourites extends React.Component {\r\n  state = {\r\n    loading: true,\r\n    min_rnk: 1,\r\n    max_rnk: record_size,\r\n    ConditionSearch: '',\r\n    OfficialTitle: '',\r\n    LocationSearch: '',\r\n    OverallStatus: '',\r\n    StudyType: '',\r\n    HealthyVolunteers: '',\r\n    Gender: '',\r\n    StdAge: '',\r\n    LocationCountry: 'Singapore',\r\n    NCTId: '',\r\n    studiesFound: 0,\r\n    trials: [],\r\n  };\r\n\r\n  apiGenerator() {\r\n    const api_base_url = base_api;\r\n    const keyPrefix = 'AREA%5B';\r\n    const keySuffix = '%5D';\r\n    const exprPrefix = '%28';\r\n    const exprSuffix = '%29';\r\n    let expr = '';\r\n    for (let key in this.state) {\r\n      if (key[0] === key[0].toUpperCase() && this.state[key] !== '') {\r\n        if (key === 'OverallStatus') {\r\n          expr += `${keyPrefix}${key}${keySuffix}COVERAGE%5BFullMatch%5D${exprPrefix}${this.state[key]}${exprSuffix}+AND+`; // special handling to filter out terms like 'not yet recruiting'\r\n        } else if (key === 'NCTId') {\r\n          let NCTIds = this.state[key].join('+OR+');\r\n          expr += `${keyPrefix}${key}${keySuffix}${exprPrefix}${NCTIds}${exprSuffix}+AND+`; // handle favourite studies\r\n        } else {\r\n          expr += `${keyPrefix}${key}${keySuffix}${exprPrefix}${this.state[key]}${exprSuffix}+AND+`;\r\n        }\r\n      }\r\n    }\r\n    if (expr.length > 0) expr = expr.substr(0, expr.length - 5); //remove final '+AND+'\r\n    return `${api_base_url}&expr=${expr}&min_rnk=${this.state.min_rnk}&max_rnk=${this.state.max_rnk}&fmt=json`;\r\n  }\r\n\r\n  fetchItems = async (api_url) => {\r\n    try {\r\n      const result = await (await fetch(api_url)).json();\r\n      this.setState({\r\n        loading: false,\r\n        studiesFound: result.FullStudiesResponse.NStudiesFound,\r\n        trials: result.FullStudiesResponse.FullStudies,\r\n      });\r\n    } catch (error) {\r\n      console.log(`Error fetching ${api_url}: ${error}`);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    let fav = JSON.parse(localStorage.getItem('favourite')) || [];\r\n    if (fav.length > 0) {\r\n      this.setState({\r\n        NCTId: fav,\r\n      });\r\n\r\n      this.timeout = setTimeout(() => {\r\n        let api_url = this.apiGenerator();\r\n        this.fetchItems(api_url);\r\n      }, 100);\r\n    } else {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleConditionSearch = (searchTerm) => {\r\n    this.setState(\r\n      {\r\n        loading: true,\r\n        ConditionSearch: searchTerm,\r\n        min_rnk: 1,\r\n        max_rnk: record_size,\r\n        trials: [],\r\n      },\r\n      () => {\r\n        let api_url = this.apiGenerator();\r\n        this.fetchItems(api_url);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleStudySearch = (searchTerm) => {\r\n    this.setState(\r\n      {\r\n        loading: true,\r\n        OfficialTitle: searchTerm,\r\n        min_rnk: 1,\r\n        max_rnk: record_size,\r\n        trials: [],\r\n      },\r\n      () => {\r\n        let api_url = this.apiGenerator();\r\n        this.fetchItems(api_url);\r\n      }\r\n    );\r\n  };\r\n\r\n  handleLocationSearch = (searchTerm) => {\r\n    this.setState(\r\n      {\r\n        loading: true,\r\n        LocationSearch: searchTerm,\r\n        min_rnk: 1,\r\n        max_rnk: record_size,\r\n        trials: [],\r\n      },\r\n      () => {\r\n        let api_url = this.apiGenerator();\r\n        this.fetchItems(api_url);\r\n      }\r\n    );\r\n  };\r\n\r\n  getOverallStatus = () => {\r\n    const recruitingStatus = document.getElementById('status-recruiting');\r\n    const notRecruitingStatus = document.getElementById(\r\n      'status-not-recruiting'\r\n    );\r\n    let result = [];\r\n    recruitingStatus.checked && result.push('Recruiting');\r\n    notRecruitingStatus.checked && result.push('NOT Recruiting');\r\n    return result.join('+OR+');\r\n  };\r\n\r\n  handleRecruitingClick = () => {\r\n    const overallStatus = this.getOverallStatus();\r\n    this.setState({\r\n      loading: true,\r\n      OverallStatus: overallStatus,\r\n      min_rnk: 1,\r\n      max_rnk: record_size,\r\n      trials: [],\r\n    });\r\n    let api_url = this.apiGenerator();\r\n    this.fetchItems(api_url);\r\n  };\r\n\r\n  getStudyType = () => {\r\n    const interventionalType = document.getElementById('type-interventional');\r\n    const observationalType = document.getElementById('type-observational');\r\n    let result = [];\r\n    interventionalType.checked && result.push('Interventional');\r\n    observationalType.checked && result.push('Observational');\r\n    if (result.length === 2) result = []; // include both types if both checkboxes are selected\r\n    return result.join('+OR+');\r\n  };\r\n\r\n  handleTypeClick = () => {\r\n    const studyType = this.getStudyType();\r\n    this.setState({\r\n      loading: true,\r\n      StudyType: studyType,\r\n      min_rnk: 1,\r\n      max_rnk: record_size,\r\n      trials: [],\r\n    });\r\n    let api_url = this.apiGenerator();\r\n    this.fetchItems(api_url);\r\n  };\r\n\r\n  getHealthyVolunteers = () => {\r\n    const volunteersYes = document.getElementById('healthy-volunteers-yes');\r\n    const volunteersNo = document.getElementById('healthy-volunteers-no');\r\n    let result = [];\r\n    volunteersYes.checked && result.push('Accepts Healthy Volunteers');\r\n    volunteersNo.checked && result.push('NOT Accept Healthy Volunteers');\r\n    return result.join('+OR+');\r\n  };\r\n\r\n  handleVolunteersClick = () => {\r\n    const healthyVolunteers = this.getHealthyVolunteers();\r\n    this.setState({\r\n      loading: true,\r\n      HealthyVolunteers: healthyVolunteers,\r\n      min_rnk: 1,\r\n      max_rnk: record_size,\r\n      trials: [],\r\n    });\r\n    let api_url = this.apiGenerator();\r\n    this.fetchItems(api_url);\r\n  };\r\n\r\n  getGenders = () => {\r\n    const genderMale = document.getElementById('gender-male');\r\n    const genderFemale = document.getElementById('gender-female');\r\n    let result = [];\r\n    genderMale.checked && result.push('Male');\r\n    genderFemale.checked && result.push('Female');\r\n    if (result.length === 2) result = []; // include both genders if both checkboxes are selected\r\n    return result.join('+OR+');\r\n  };\r\n\r\n  handleGenderClick = () => {\r\n    const gender = this.getGenders();\r\n    this.setState({\r\n      loading: true,\r\n      Gender: gender,\r\n      min_rnk: 1,\r\n      max_rnk: record_size,\r\n      trials: [],\r\n    });\r\n    let api_url = this.apiGenerator();\r\n    this.fetchItems(api_url);\r\n  };\r\n\r\n  getAgeGroups = () => {\r\n    const ageChild = document.getElementById('age-child');\r\n    const ageAdult = document.getElementById('age-adult');\r\n    const ageOldAdult = document.getElementById('age-old-adult');\r\n    let result = [];\r\n    ageChild.checked && result.push('Child');\r\n    ageAdult.checked && result.push('Adult');\r\n    ageOldAdult.checked && result.push('Older Adult');\r\n    if (result.length === 3) result = []; // include all age groups if all checkboxes are selected\r\n    return result.join('+OR+');\r\n  };\r\n\r\n  handleAgeGroupClick = () => {\r\n    const ageGroup = this.getAgeGroups();\r\n    this.setState({\r\n      loading: true,\r\n      StdAge: ageGroup,\r\n      min_rnk: 1,\r\n      max_rnk: record_size,\r\n      trials: [],\r\n    });\r\n    let api_url = this.apiGenerator();\r\n    this.fetchItems(api_url);\r\n  };\r\n\r\n  loadMoreItems = () => {\r\n    this.setState(\r\n      {\r\n        loading: true,\r\n        min_rnk: this.state.min_rnk + record_size,\r\n        max_rnk: this.state.max_rnk + record_size,\r\n      },\r\n      () => {\r\n        if (this.state.min_rnk <= this.state.studiesFound) {\r\n          let api_url = this.apiGenerator();\r\n          fetch(api_url)\r\n            .then((res) => res.json())\r\n            .then((res) => {\r\n              this.setState((state) => ({\r\n                loading: false,\r\n                trials: [\r\n                  ...state.trials,\r\n                  ...res.FullStudiesResponse.FullStudies,\r\n                ],\r\n              }));\r\n            });\r\n        } else {\r\n          this.setState({\r\n            loading: false,\r\n          });\r\n          alert('All records shown');\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='container-fluid p-0'>\r\n        <ScrollUpButton\r\n          ContainerClassName='AnyClassForContainer'\r\n          TransitionClassName='AnyClassForTransition'\r\n        />\r\n        <Navbar\r\n          handleConditionSearch={this.handleConditionSearch}\r\n          favCount={this.state.NCTId.length}\r\n          loading={this.state.loading}\r\n        />\r\n        <Jumbotron\r\n          studiesFound={this.state.studiesFound}\r\n          loading={this.state.loading}\r\n          handleConditionSearch={this.handleConditionSearch}\r\n          handleStudySearch={this.handleStudySearch}\r\n          handleLocationSearch={this.handleLocationSearch}\r\n          handleRecruitingClick={this.handleRecruitingClick}\r\n          handleTypeClick={this.handleTypeClick}\r\n          handleVolunteersClick={this.handleVolunteersClick}\r\n          handleGenderClick={this.handleGenderClick}\r\n          handleAgeGroupClick={this.handleAgeGroupClick}\r\n        />\r\n        {this.state.trials !== undefined && this.state.NCTId.length > 0 ? (\r\n          <div className='container'>\r\n            <div className='row'>\r\n              <div\r\n                className={`border content ${\r\n                  this.state.loading &&\r\n                  this.state.min_rnk === 1 &&\r\n                  'content-loading'\r\n                }`}\r\n              >\r\n                <table className='table'>\r\n                  <tbody>\r\n                    {this.state.trials\r\n                      .filter(\r\n                        (trial) =>\r\n                          trial.Study.ProtocolSection.StatusModule\r\n                            .OverallStatus !== 'Withheld'\r\n                      )\r\n                      .map((trial, index) => (\r\n                        <Card study={trial.Study} index={index} key={index} />\r\n                      ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n\r\n              {/* sidebar */}\r\n              <div>{/* to render sidebar here */}</div>\r\n            </div>\r\n            {this.state.loading ? (\r\n              <Spinner />\r\n            ) : this.state.studiesFound > this.state.max_rnk ? (\r\n              <LoadMoreBtn handleClick={this.loadMoreItems} />\r\n            ) : (\r\n              <div className='container text-center mt-4 mb-5'>\r\n                <span>All records shown</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div className='container text-center not-found'>\r\n            <img src={require(`../../images/not-found.jpg`)} alt='not-found' />\r\n            <br />\r\n            <span>No data found</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BrowseFavourites;\r\n","import React from 'react';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport BrowseTrials from './pages/BrowseTrials.js';\r\nimport BrowseFavourites from './pages/BrowseFavourites.js';\r\n\r\nconst App = () => {\r\n  return (\r\n    <HashRouter baseline='/'>\r\n      <Route exact path='/' component={BrowseTrials} />\r\n      <Route exact path='/favourites' component={BrowseFavourites} />\r\n      {/* <Route component={NotFound} /> */}\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './others/serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}